{"version":3,"file":"static/js/876.84a83dac.chunk.js","mappings":"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","sources":["routes/orders/ordersPage.styles.ts","components/orderItem/orderItem.styles.tsx","components/orderItem/orderItem.component.tsx","routes/orders/ordersPage.route.tsx","utils/reusableFunctions/timeSorting.function.ts","store/orderHistory/orderHistory.selector.ts"],"sourcesContent":["import { Colors, H3 } from \"../../global.styles\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { StandardFlexMixin } from \"../../global.styles\";\r\n\r\nexport const OrdersContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  // align-items: center;\r\n  justify-content: start;\r\n  padding: 1rem 2rem;\r\n  height: 100%;\r\n  // border: 2px solid red;\r\n`;\r\n\r\nexport const OrdersContent = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  margin: 0 auto;\r\n\r\n  // border: 2px solid red;\r\n`;\r\nexport const OrderItemsContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n\r\n  // border: 2px solid red;\r\n`;\r\n\r\nexport const OrdersHeader = styled.div`\r\n  padding: 0.7rem 0;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid ${Colors.dark};\r\n  // border: 2px solid red;\r\n`;\r\n\r\nexport const HeaderBlock = styled.div`\r\n  text-transform: capitalize;\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const OrdersTitle = styled(H3)`\r\n  border-bottom: 2px solid;\r\n  border-image-slice: 1;\r\n\r\n  border-image-source: linear-gradient(\r\n    to left,\r\n    ${Colors.dark},\r\n    ${Colors.primary},\r\n    ${Colors.dark}\r\n  );\r\n  padding-bottom: 0.5rem;\r\n  position: relative;\r\n\r\n  }\r\n`;\r\n\r\nexport const OrderListLink = styled(Link)`\r\n  cursor: pointer;\r\n  position: relative;\r\n  color: inherit;\r\n  text-decoration: inherit;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #18272f;\r\n    bottom: 0;\r\n    left: 0;\r\n    transform-origin: right;\r\n    transform: scaleX(0);\r\n    transition: transform 0.3s ease-in-out;\r\n  }\r\n\r\n  &:hover::before {\r\n    transform-origin: left;\r\n    transform: scaleX(1);\r\n  }\r\n\r\n  &:hover {\r\n    color: ${Colors.primary};\r\n  }\r\n`;\r\n\r\nexport const OrderItemWrapper = styled(motion.div)`\r\n  ${StandardFlexMixin};\r\n\r\n  width: 100%;\r\n`;\r\n","import { Colors } from \"../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const OrderItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 3rem;\r\n  border-bottom: 1px solid ${Colors.darkRGBA};\r\n  padding: 0.2rem 0 0.3rem 0;\r\n  font-size: 1.25rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n`;\r\n\r\nexport const OrderItemContent = styled(OrderItemContainer)`\r\n  border: none;\r\n  cursor: pointer;\r\n  gap: 0;\r\n`;\r\n\r\nexport const OrderItemHeader = styled(OrderItemContainer)`\r\n  flex-direction: row;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const OrderItemInfoHeader = styled(OrderItemHeader)`\r\n  align-items: start;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  min-height: 0rem;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const OrderItemInfo = styled(OrderItemHeader)`\r\n  margin: 0.2rem 0 0 0;\r\n  align-items: start;\r\n  justify-content: space-between;\r\n  min-height: 3rem;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const Id = styled.span``;\r\n\r\nexport const Time = styled.span`\r\n  display: flex;\r\n`;\r\n\r\nexport const Total = styled.div`\r\n  margin: 0 0.6rem;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  align-items: start;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ItemsInfo = styled.div``;\r\n\r\nexport const PayDeliveryInfo = styled.div``;\r\n\r\nexport const AdresInfo = styled.div``;\r\n\r\nexport const OrderDescription = styled.div`\r\n  font-size: 1rem;\r\n`;\r\n","import { H4 } from \"../../global.styles\";\r\nimport { FC, useState } from \"react\";\r\nimport { Order } from \"../../store/orderHistory/orderHistory.types\";\r\n\r\nimport {\r\n  OrderItemContainer,\r\n  OrderItemHeader,\r\n  OrderItemContent,\r\n  OrderItemInfoHeader,\r\n  OrderDescription,\r\n  Id,\r\n  Time,\r\n  Total,\r\n  UserInfo,\r\n  ItemsInfo,\r\n  PayDeliveryInfo,\r\n  AdresInfo,\r\n  Info\r\n} from \"./orderItem.styles\";\r\nimport { selectCurrentUserFormData } from \"../../store/userReducer/user.selector\";\r\nimport { useAppSelector } from \"../../hooks/hooks\";\r\n\r\ntype OrderItemProps = {\r\n  orderItem: Order;\r\n};\r\n\r\nexport const OrderItem: FC<OrderItemProps> = ({ orderItem }) => {\r\n  const { id, time, price, itemsBought, deliveryData, deliveryPrice } =\r\n    orderItem;\r\n  const { name, lastName, email } = useAppSelector(selectCurrentUserFormData);\r\n  const { city, street, homeAdress, zip, deliveryMethod, payMethod } =\r\n    deliveryData;\r\n\r\n  const [info, setInfo] = useState(false);\r\n\r\n  return (\r\n    <OrderItemContainer>\r\n      <OrderItemContent>\r\n        <OrderItemHeader onClick={() => setInfo(!info)}>\r\n          <Id>{id}</Id>\r\n          <Time>{time}</Time>\r\n\r\n          <Total>{`${price ? price + \"zł\" : \"Błąd\"}`}</Total>\r\n        </OrderItemHeader>\r\n        {info ? (\r\n          <>\r\n            <OrderItemInfoHeader>\r\n              <UserInfo>\r\n                <H4>{`Użytkownik`}</H4>\r\n                <Info>{`Name: ${name} ${lastName}`}</Info>\r\n                <Info>{`Email: ${email} `}</Info>\r\n              </UserInfo>\r\n\r\n              <ItemsInfo>\r\n                <H4>{`Przedmioty`}</H4>\r\n                {itemsBought.length > 0 &&\r\n                  itemsBought.map((item) => (\r\n                    <Info key={item.id}>\r\n                      {`${item.name} - ${item.quantity}x${item.price}zł`}\r\n                    </Info>\r\n                  ))}\r\n              </ItemsInfo>\r\n              <PayDeliveryInfo>\r\n                <H4> {`Dostawa i płatność`}</H4>\r\n                <Info>{`Dostawa: ${deliveryMethod} - ${\r\n                  deliveryPrice ? deliveryPrice + \"zł\" : \"Darmowa dostawa\"\r\n                } `}</Info>\r\n                <Info>{`Płatność: ${payMethod} `}</Info>\r\n              </PayDeliveryInfo>\r\n              <AdresInfo>\r\n                <H4>{`Adres`}</H4>\r\n                <Info>{`Miasto: ${city} `}</Info>\r\n                <Info>{`Ulica: ${street} `}</Info>\r\n                <Info>{`Dom: ${homeAdress} `}</Info>\r\n                <Info>{`Kod pocztowy: ${zip} `}</Info>\r\n              </AdresInfo>\r\n            </OrderItemInfoHeader>\r\n          </>\r\n        ) : (\r\n          <OrderDescription>\r\n            Kliknij aby zobaczyć szczegóły zamówienia\r\n          </OrderDescription>\r\n        )}\r\n      </OrderItemContent>\r\n    </OrderItemContainer>\r\n  );\r\n};\r\n","import { useAppDispatch, useAppSelector } from \"../../hooks/hooks\";\r\n\r\nimport {\r\n  OrdersContainer,\r\n  OrdersHeader,\r\n  HeaderBlock,\r\n  OrdersTitle,\r\n  OrdersContent,\r\n  OrderItemsContainer,\r\n  OrderListLink,\r\n  OrderItemWrapper\r\n} from \"./ordersPage.styles\";\r\n\r\nimport { OrderItem } from \"../../components/orderItem/orderItem.component\";\r\nimport { selectViewLimiter } from \"../../store/generalPropReducer/generalProp.selector\";\r\nimport Button, {\r\n  BUTTON_TYPE_CLASSES\r\n} from \"../../components/button/button.component\";\r\nimport { incrementViewLimiter } from \"../../store/generalPropReducer/generalProp.actions\";\r\nimport { selectOrderHistory } from \"../../store/orderHistory/orderHistory.selector\";\r\nimport { timeSorting } from \"../../utils/reusableFunctions/timeSorting.function\";\r\nimport { selectLoginStatus } from \"../../store/userReducer/user.selector\";\r\nimport { LOGIN_STATUS_TYPES } from \"../../store/userReducer/user.reducer\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { OrdersHisoryVariants } from \"../../utils/framer-motion/variants.utils\";\r\n\r\nimport { viewLimiterInit } from \"../../store/generalPropReducer/generalProp.reducer\";\r\n\r\nconst OrdersPage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const ordersHistory = useAppSelector(selectOrderHistory);\r\n  const viewLimiter = useAppSelector(selectViewLimiter);\r\n\r\n  const isLoggedIn = useAppSelector(selectLoginStatus);\r\n  const tempOrdersHistory = ordersHistory\r\n    ? [...timeSorting(ordersHistory)].splice(0, viewLimiter)\r\n    : [];\r\n  console.log(isLoggedIn);\r\n  const ordersHeaders = {\r\n    title: \"historia zamówień\",\r\n    id: \"#id\",\r\n    date: \"Data\",\r\n    price: \"Kwota\"\r\n  };\r\n\r\n  const moreHistoryHandler = () => {\r\n    dispatch(incrementViewLimiter(viewLimiter, 1));\r\n  };\r\n\r\n  return (\r\n    <OrdersContainer>\r\n      <OrdersContent>\r\n        <OrdersTitle>{`${ordersHeaders.title.toUpperCase()}`}</OrdersTitle>\r\n        {tempOrdersHistory.length > 0 ? (\r\n          <>\r\n            <OrdersHeader>\r\n              <HeaderBlock>{`${ordersHeaders.id}`}</HeaderBlock>\r\n\r\n              <HeaderBlock>{`${ordersHeaders.date}`}</HeaderBlock>\r\n\r\n              <HeaderBlock>{`${ordersHeaders.price}`}</HeaderBlock>\r\n            </OrdersHeader>\r\n            <OrderItemsContainer>\r\n              {tempOrdersHistory\r\n                ? tempOrdersHistory.map((currentOrder, index: number) => {\r\n                    return (\r\n                      <OrderItemWrapper\r\n                        key={currentOrder.id}\r\n                        variants={OrdersHisoryVariants}\r\n                        custom={{ viewLimiterInit, viewLimiter, index }}\r\n                        initial=\"enter\"\r\n                        animate=\"visible\"\r\n                        exit=\"exit\"\r\n                      >\r\n                        <OrderItem orderItem={currentOrder} />\r\n                      </OrderItemWrapper>\r\n                    );\r\n                  })\r\n                : null}\r\n            </OrderItemsContainer>{\" \"}\r\n          </>\r\n        ) : isLoggedIn === LOGIN_STATUS_TYPES.LOGGED_IN ? (\r\n          \"Zrób conajmniej jedno zamówienie żeby widzieć historię zamówień\"\r\n        ) : (\r\n          <div>\r\n            <OrderListLink to={\"/mojeKonto\"}>Zaloguj się </OrderListLink>żeby\r\n            widzieć swoją historię zamówień\r\n          </div>\r\n        )}\r\n      </OrdersContent>\r\n      {ordersHistory.length > viewLimiter && (\r\n        <Button\r\n          data-testid=\"paginationButton\"\r\n          onClick={moreHistoryHandler}\r\n          buttonType={BUTTON_TYPE_CLASSES.base}\r\n        >\r\n          Więcej zamówień...\r\n        </Button>\r\n      )}\r\n    </OrdersContainer>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n","import { Order } from \"../../store/orderHistory/orderHistory.types\";\r\n\r\nexport const timeSorting = (array: Order[]) => {\r\n  const reversedArray = [...array].reverse()\r\n  return reversedArray;\r\n};\r\n","import { createSelector } from \"reselect\";\r\nimport { ReduxState } from \"../rootReducer.redux\";\r\nimport { OrderHistoryState } from \"./orderHistory.reducer\";\r\n\r\nexport const selectOrderHistoryReducer = (state: ReduxState): OrderHistoryState =>\r\n  state.orderHistoryReducer;\r\n\r\n  export const selectOrderHistory = createSelector(\r\n    [selectOrderHistoryReducer],\r\n    (orderHistoryReducer) => orderHistoryReducer.orderHistory\r\n  );\r\n  \r\n  export const selectDelivery = createSelector(\r\n    [selectOrderHistoryReducer],\r\n    (state) => state.delivery\r\n  );\r\n  "],"names":["OrdersContainer","styled","OrdersContent","OrderItemsContainer","OrdersHeader","Colors","HeaderBlock","OrdersTitle","H3","OrderListLink","Link","OrderItemWrapper","motion","StandardFlexMixin","OrderItemContainer","OrderItemContent","OrderItemHeader","OrderItemInfoHeader","Id","Time","Total","Info","UserInfo","ItemsInfo","PayDeliveryInfo","AdresInfo","OrderDescription","OrderItem","orderItem","id","time","price","itemsBought","deliveryData","deliveryPrice","useAppSelector","selectCurrentUserFormData","name","lastName","email","city","street","homeAdress","zip","deliveryMethod","payMethod","useState","info","setInfo","onClick","H4","length","map","item","quantity","array","dispatch","useAppDispatch","ordersHistory","selectOrderHistory","viewLimiter","selectViewLimiter","isLoggedIn","selectLoginStatus","tempOrdersHistory","reverse","splice","console","log","ordersHeaders","title","date","toUpperCase","currentOrder","index","variants","OrdersHisoryVariants","custom","viewLimiterInit","initial","animate","exit","LOGIN_STATUS_TYPES","to","incrementViewLimiter","buttonType","BUTTON_TYPE_CLASSES","selectOrderHistoryReducer","state","orderHistoryReducer","createSelector","orderHistory","selectDelivery","delivery"],"sourceRoot":""}