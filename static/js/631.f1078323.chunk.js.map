{"version":3,"file":"static/js/631.f1078323.chunk.js","mappings":"uOAKaA,EAAwBC,EAAAA,GAAAA,IAAU,2LACtBC,EAAAA,GAAAA,SASZC,EAAmBF,EAAAA,GAAAA,KAAW,6FAK9BG,GAAoBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAc,mOASzBC,EAAAA,GAAAA,S,SChBTI,EAAyD,SAAH,GAG5D,IAFLC,EAAQ,EAARA,SACAC,EAAQ,EAARA,SAEQC,EAAUF,EAAVE,MACFC,EAAOD,EACPE,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACZ,EAAqB,CAAC,cAAY,qBAAqBa,QALrB,WACnCF,EAAS,UAAD,OAAWD,GACrB,EAGgG,WAC5F,SAACP,EAAgB,UAAEK,KACnB,SAACJ,EAAiB,UAAEK,MAG1B,E,oBC7BaK,EAAsBb,EAAAA,GAAAA,IAAU,2I,wCCQhCc,EAAe,WAC1B,IAAMC,GAAaC,EAAAA,EAAAA,GAAeC,EAAAA,IAClC,OACE,SAACJ,EAAmB,UACjBE,GACCA,EAAWG,KAAI,SAACZ,EAAUa,GACxB,OACE,SAACC,EAAA,EAAe,CAAaC,OAAQF,EAAM,UACzC,SAACG,EAAA,MAAU,CACTC,SAAUC,EAAAA,GACVC,QAAQ,QACRC,QAAQ,UACRC,KAAK,OACLN,OAAQF,EAAM,UAEd,SAACd,EAAY,CAAsBC,SAAUA,EAAS,UACpD,SAAC,KAAI,CACHsB,KAAMtB,EAASsB,KACfC,MAAM,UACNC,MAAM,KACNC,OAAO,QALQzB,EAASE,UARVW,EAmB1B,GAAG,CAAC,IAGZ,ECpCaa,GAAmBhC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAU,sTAQpCC,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,QACAA,EAAAA,GAAAA,MAMOiC,EAAclC,EAAAA,GAAAA,IAAU,yJAQxBmC,GAAyBnC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAA6B,+FCzBtDqC,EAAgB,WAEzB,OACI,UAACF,EAAsB,YACnB,SAACH,EAAgB,oBAAKM,OACpB,SACAC,kBACF,SAACL,EAAW,odAYxB,ECnBaM,EAAqBxC,EAAAA,GAAAA,IAAU,sICG/ByC,EAAgB,WAC3B,OACE,UAACD,EAAkB,YACjB,SAAC1B,EAAY,KAEb,SAACuB,EAAa,MAGpB,E,4BCuBA,EAxBiB,WACf,IAAMK,GAAWC,EAAAA,EAAAA,KASjB,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWC,EAAAA,IAAyB,SAACC,GACnC,IAAMC,EAAiBD,EAASE,KAAK/B,KAAI,SAACgC,GAAC,OAAKA,EAAEC,MAAM,IACxDT,GAASU,EAAAA,EAAAA,IAAqBJ,GAChC,GACF,GAAG,KAGD,+BACE,UAAC1B,EAAA,MAAU,CACTC,SAAU8B,EAAAA,GACV5B,QAAQ,QACRC,QAAQ,UACRC,KAAK,OAAM,WAEX,SAAC,KAAM,KACP,SAACc,EAAS,QAIlB,C,gIC9Baa,EAAwB,SAACC,GAAiB,OACrDA,EAAMC,iBAAkB,EAEbvC,GAAmBwC,EAAAA,EAAAA,IAC9B,CAACH,IACD,SAACI,GAAe,OAAKA,EAAgB3C,UAAU,IAQpC4C,IAL0BF,EAAAA,EAAAA,IACrC,CAACH,IACD,SAACI,GAAe,OAAKA,EAAgBE,SAAS,KAGbH,EAAAA,EAAAA,IACjC,CAACxC,IACD,SAACF,GACC,OAAOA,EAAW8C,QAAO,SAACC,EAAKxD,GAC7B,IAAQE,EAAiBF,EAAjBE,MAAOuD,EAAUzD,EAAVyD,MAEf,OADAD,EAAItD,EAAMwD,eAAiBD,EACpBD,CACT,GAAG,CAAC,EACN,KAGWG,GAAoBR,EAAAA,EAAAA,IAC/B,CAACE,IACD,SAACO,GACC,IAAMC,EAA+B,GAKrC,OAJAC,OAAOC,OAAOH,GAAehD,KAAI,SAACoD,GAChCH,EAAaI,KAAI,MAAjBJ,GAAY,OAASG,GACvB,GAAG,IAEIH,CACT,G","sources":["components/categories/categoriesCards/categoriesCards.styles.ts","components/categories/categoriesCards/categoriesCards.component.tsx","components/categories/categories.styles.ts","components/categories/categories.component.tsx","components/description/descriptionHP.styles.ts","components/description/descriptionHP.component.tsx","components/directory/directory.styles.ts","components/directory/directory.component.tsx","routes/home/homePage.route.tsx","store/categories/category.selector.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { PLarge } from \"../../../global.styles\";\r\nimport { Colors } from \"../../../global.styles\";\r\n\r\nexport const CategoryCardContainer = styled.div`\r\n  border: 0.2rem solid ${Colors.primary};\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  gap: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CategoryCardIcon = styled.span`\r\n  /* border: 2px solid red; */\r\n  padding: 0.5rem 1rem 0.5rem 1rem;\r\n`;\r\n\r\nexport const CategoryCardTitle = styled(PLarge)`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: 0.5rem 1rem 0.5rem 1rem;\r\n  margin: auto;\r\n\r\n  // border: 2px solid red;\r\n  background-color: ${Colors.primary};\r\n`;\r\n","import { FC, PropsWithChildren } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Category } from \"../../../store/categories/category.types\";\r\nimport {\r\n  CategoryCardIcon,\r\n  CategoryCardTitle,\r\n  CategoryCardContainer\r\n} from \"./categoriesCards.styles\";\r\n\r\ntype CategoryCardProps = {\r\n  category: Category;\r\n};\r\n\r\nexport const CategoryCard: FC<PropsWithChildren<CategoryCardProps>> = ({\r\n  category,\r\n  children\r\n}) => {\r\n  const { title } = category;\r\n  const path = title;\r\n  const navigate = useNavigate();\r\n\r\n  const CategoriesCardOnClickHandler = () => {\r\n    navigate(`/sklep/${path}`);\r\n  };\r\n\r\n  return (\r\n    <CategoryCardContainer data-testid='categoryCardButton' onClick={CategoriesCardOnClickHandler}>\r\n      <CategoryCardIcon>{children}</CategoryCardIcon>\r\n      <CategoryCardTitle>{title}</CategoryCardTitle>\r\n    </CategoryCardContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const CategoriesContainer = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin: 2rem 0rem 1rem 0rem;\r\n`;\r\n","import { CategoryCard } from \"./categoriesCards/categoriesCards.component\";\r\n\r\nimport { selectCategories } from \"../../store/categories/category.selector\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { CategoriesContainer } from \"./categories.styles\";\r\nimport { useAppSelector } from \"../../hooks/hooks\";\r\n\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { HPCategoriesVariants } from \"../../utils/framer-motion/variants.utils\";\r\n\r\nexport const CategoriesHP = () => {\r\n  const categories = useAppSelector(selectCategories);\r\n  return (\r\n    <CategoriesContainer>\r\n      {categories &&\r\n        categories.map((category, index) => {\r\n          return (\r\n            <AnimatePresence key={index} custom={index}>\r\n              <motion.div\r\n                variants={HPCategoriesVariants}\r\n                initial='enter'\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                custom={index}\r\n              >\r\n                <CategoryCard key={category.title} category={category}>\r\n                  <Icon\r\n                    icon={category.icon}\r\n                    color=\"#ffb703\"\r\n                    width=\"96\"\r\n                    height=\"96\"\r\n                  />\r\n                </CategoryCard>\r\n              </motion.div>\r\n            </AnimatePresence>\r\n          );\r\n        }, {})}\r\n    </CategoriesContainer>\r\n  );\r\n};\r\n","import { Colors, H3, StandardFlexContainer } from \"../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const DescriptionTitle = styled(H3)`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  border-bottom: 2px solid;\r\n  border-image-slice: 1;\r\n  border-image-source: linear-gradient(\r\n    to left,\r\n    ${Colors.dark},\r\n    ${Colors.primary},\r\n    ${Colors.dark}\r\n  );\r\n  padding-bottom: 0.2rem;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n`;\r\nexport const Description = styled.div`\r\n  // border: 2px solid blue;\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  text-align: start;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const DescriptionHPContainer = styled(StandardFlexContainer)`\r\n  flex-direction: column;\r\n  padding: 1rem 1rem;\r\n  max-width: 70rem;\r\n`;\r\n","import { Description, DescriptionHPContainer, DescriptionTitle } from \"./descriptionHP.styles\"\r\n\r\nexport const DescriptionHP = ()=>{\r\n\r\n    return(\r\n        <DescriptionHPContainer>\r\n            <DescriptionTitle>{`${String(\r\n              \"O nas\"\r\n            ).toUpperCase()}`}</DescriptionTitle>\r\n            <Description>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio\r\n              similique laborum excepturi ducimus praesentium, sapiente cumque\r\n              ipsum perspiciatis quod eos illum aliquam illo a, rem, recusandae\r\n              veritatis quibusdam in tempora? Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio\r\n              similique laborum excepturi ducimus praesentium, sapiente cumque\r\n              ipsum perspiciatis quod eos illum aliquam illo a, rem, recusandae\r\n              veritatis quibusdam in tempora?\r\n            </Description>\r\n          \r\n        </DescriptionHPContainer>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const DirectoryContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n  flex: 1 1 100%;\r\n`;\r\n","import { FC } from \"react\";\r\nimport { CategoriesHP } from \"../categories/categories.component\";\r\nimport { DescriptionHP } from \"../description/descriptionHP.component\";\r\nimport { DirectoryContainer } from \"./directory.styles\";\r\n\r\nexport const Directory: FC = () => {\r\n  return (\r\n    <DirectoryContainer>\r\n      <CategoriesHP />\r\n\r\n      <DescriptionHP />\r\n    </DirectoryContainer>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Directory } from \"../../components/directory/directory.component\";\r\nimport { fetchCategoriesAsync } from \"../../store/categories/category.action\";\r\nimport { useAppDispatch } from \"../../hooks/hooks\";\r\nimport { categoriesCollectionRef } from \"../../utils/firebase/firebase.utils\";\r\nimport { onSnapshot } from \"firebase/firestore\";\r\nimport { Category } from \"../../store/categories/category.types\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { VanishingPageVariants } from \"../../utils/framer-motion/variants.utils\";\r\n\r\nconst HomePage = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    onSnapshot(categoriesCollectionRef, (snapshot) => {\r\n      const tempCategArray = snapshot.docs.map((d) => d.data());\r\n      dispatch(fetchCategoriesAsync(tempCategArray as Category[]));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        variants={VanishingPageVariants}\r\n        initial=\"entry\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n      >\r\n        <Outlet />\r\n        <Directory />\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import { createSelector } from \"reselect\";\r\nimport { ReduxState } from \"../rootReducer.redux\";\r\nimport { CategoriesState } from \"./category.reducer\";\r\nimport { CategoryItem, CategoryMap } from \"./category.types\";\r\n\r\nexport const selectCategoryReducer = (state: ReduxState): CategoriesState =>\r\n  state.categoriesReducer;\r\n\r\nexport const selectCategories = createSelector(\r\n  [selectCategoryReducer],\r\n  (categoriesSlice) => categoriesSlice.categories\r\n);\r\n\r\nexport const selectCategoryIfLoading = createSelector(\r\n  [selectCategoryReducer],\r\n  (categoriesSlice) => categoriesSlice.isLoading\r\n);\r\n\r\nexport const selectCategoriesMap = createSelector(\r\n  [selectCategories],\r\n  (categories): CategoryMap => {\r\n    return categories.reduce((acc, category) => {\r\n      const { title, items } = category;\r\n      acc[title.toLowerCase()] = items;\r\n      return acc;\r\n    }, {} as CategoryMap);\r\n  }\r\n);\r\n\r\nexport const selectAllItemsMap = createSelector(\r\n  [selectCategoriesMap],\r\n  (categoriesMap): CategoryItem[] => {\r\n    const tempAllItems: CategoryItem[] = [];\r\n    Object.values(categoriesMap).map((value) => {\r\n      tempAllItems.push(...value);\r\n    }, [] as CategoryItem[]);\r\n\r\n    return tempAllItems;\r\n  }\r\n);\r\n"],"names":["CategoryCardContainer","styled","Colors","CategoryCardIcon","CategoryCardTitle","PLarge","CategoryCard","category","children","title","path","navigate","useNavigate","onClick","CategoriesContainer","CategoriesHP","categories","useAppSelector","selectCategories","map","index","AnimatePresence","custom","motion","variants","HPCategoriesVariants","initial","animate","exit","icon","color","width","height","DescriptionTitle","H3","Description","DescriptionHPContainer","StandardFlexContainer","DescriptionHP","String","toUpperCase","DirectoryContainer","Directory","dispatch","useAppDispatch","useEffect","onSnapshot","categoriesCollectionRef","snapshot","tempCategArray","docs","d","data","fetchCategoriesAsync","VanishingPageVariants","selectCategoryReducer","state","categoriesReducer","createSelector","categoriesSlice","selectCategoriesMap","isLoading","reduce","acc","items","toLowerCase","selectAllItemsMap","categoriesMap","tempAllItems","Object","values","value","push"],"sourceRoot":""}