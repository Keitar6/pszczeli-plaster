{"version":3,"file":"static/js/844.184f7f4d.chunk.js","mappings":"oOAGaA,EAAiBC,EAAAA,GAAAA,IAAU,mFAC7B,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAKpBC,EAAaH,EAAAA,GAAAA,MAAY,6XAO3BI,EAAAA,GAAAA,KAOaA,EAAAA,GAAAA,OASXC,EAAYL,EAAAA,GAAAA,MAAY,0wBAIrBI,EAAAA,GAAAA,MAIVA,EAAAA,GAAAA,QACAA,EAAAA,GAAAA,KAMKA,EAAAA,GAAAA,KAMHA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,QAMMD,EAEDC,EAAAA,GAAAA,M,gJC/BAE,EAA8D,SAAH,GAcjE,IAbLC,EAAE,EAAFA,GACAC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAX,EAAK,EAALA,MACAY,EAAS,EAATA,UACAC,EAAM,EAANA,OACAC,EAAY,EAAZA,aACAC,EAAS,EAATA,UACGC,GAAQ,YAEX,OACE,UAACnB,EAAc,CAACG,MAAK,UAAKA,GAASA,GAAQ,WACzC,SAACG,GAAS,QACRc,aAAa,MACbC,KAAMN,EACNP,GAAI,UAAGA,GAAOQ,EACdP,YAAW,UAAKA,GAChBa,SAAUL,EACVM,MAAqB,QAAdL,EAAsBA,EAAY,KACrCR,EAAS,GAAD,OAAIF,IAAE,QAChBgB,UAAU,EACVX,UAAWA,EACXC,QAASA,GACNK,OAGP,SAACf,EAAU,CAACqB,QAAO,UAAKjB,GAAK,SAAEkB,EAAAA,GAAWlB,KACzCG,IAAa,SAAC,KAAiB,UAAEC,MAGxC,C,qIChEae,EAAO1B,EAAAA,GAAAA,KAAW,qKASlB2B,EAAiB3B,EAAAA,GAAAA,IAAU,kPAU3B4B,EAAoB5B,EAAAA,GAAAA,EAAQ,yF,oGClB5B6B,GAAuB7B,EAAAA,EAAAA,IAAO8B,EAAAA,GAAP9B,CAA6B,uP,SCUpD+B,EAAuD,SAAH,GAK1D,IAJLpB,EAAQ,EAARA,SACAqB,EAAa,EAAbA,cACAC,EAAc,EAAdA,eACAlB,EAAM,EAANA,OAEMmB,EAAWD,GACbE,EAAAA,GAAAA,WAEJ,OACE,SAACN,EAAoB,WACnB,SAAC,KAAM,CACL,cAAY,SACZtB,GAAI,aAAY,UAAMQ,GAAkB,IACxCK,KAAK,SACLgB,WAAYF,EACZG,QAAS,SAACC,GACRA,EAAEC,iBACFP,GACF,EAAE,SAEDrB,KAIT,C,4KCnCa6B,EAAoBxC,EAAAA,GAAAA,IAAU,qMAU9ByC,EAA2BzC,EAAAA,GAAAA,IAAU,qKAMpBI,EAAAA,GAAAA,UAGjBsC,EAAiB1C,EAAAA,GAAAA,IAAU,iJAKXI,EAAAA,GAAAA,MAGhBuC,EAAc3C,EAAAA,GAAAA,IAAU,qGAQxB4C,GAAQ5C,EAAAA,EAAAA,IAAO,SAAPA,CAAgB,8GAOxB6C,EAAwB7C,EAAAA,GAAAA,IAAU,gJAQlC8C,GAAY9C,EAAAA,EAAAA,IAAO+C,EAAAA,GAAP/C,CAAa,sBAEzBgD,GAAehD,EAAAA,EAAAA,IAAO+C,EAAAA,GAAP/C,CAAa,sB,oBCpD5BiD,EAAwBjD,EAAAA,GAAAA,IAAU,8NAIlBI,EAAAA,GAAAA,MAOhB8C,EAAelD,EAAAA,GAAAA,IAAU,sIAQzBmD,GAAQnD,EAAAA,EAAAA,IAAO,MAAPA,CAAa,uHASrBoD,EAAOpD,EAAAA,GAAAA,IAAU,wFAKjBqD,GAAWrD,EAAAA,EAAAA,IAAOoD,EAAPpD,CAAY,0CAIvBsD,EAAQtD,EAAAA,GAAAA,IAAU,4CAIlBuD,EAAQvD,EAAAA,GAAAA,IAAU,2C,UCrBlBwD,GAAsC,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAC9CC,GAAWC,EAAAA,EAAAA,KACTC,EAAiCH,EAAjCG,KAAMC,EAA2BJ,EAA3BI,SAAUC,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACzBC,GAAYC,EAAAA,EAAAA,GAAeC,EAAAA,IAcjC,OACE,WAACjB,EAAqB,YACpB,UAACE,EAAK,CAACgB,IAAG,0BAAqBJ,GAASK,IAAG,iBAAYR,MACvD,UAACR,EAAI,UAAEQ,KACP,WAACP,EAAQ,YACP,UAACC,EAAK,CAACjB,QAbgB,WAC3BqB,GAASW,EAAAA,EAAAA,IAAmBL,EAAWP,GACzC,EAW2C,qBACrC,UAACF,EAAK,UAAEM,KACR,UAACP,EAAK,CAACjB,QAnBU,WACrBqB,GAASY,EAAAA,EAAAA,IAAcN,EAAWP,GACpC,EAiBqC,wBAEjC,UAACL,EAAI,oBAAKS,EAAWC,EAAK,cAC1B,UAACZ,EAAY,CAACqB,UAAU,gBAAgBlC,QAdlB,WACxBqB,GAASW,EAAAA,EAAAA,IAAmBL,EAAWP,GAAU,GACnD,EAYuE,sBAKzE,E,uDCpDae,GAAgBxE,EAAAA,GAAAA,MAAY,q4CAqBjCI,EAAAA,GAAAA,QACAA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,QAQUA,EAAAA,GAAAA,S,iCChCLqE,GAAkBzE,EAAAA,GAAAA,IAAU,6FAM5B0E,GAAgB1E,EAAAA,GAAAA,IAAU,oE,WCJ1B2E,GAAW3E,EAAAA,GAAAA,IAAU,gYAYvBI,EAAAA,GAAAA,SAKLA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,QACAA,EAAAA,GAAAA,MAIOwE,GAAY5E,EAAAA,GAAAA,IAAU,8EAItB6E,GAAgB7E,EAAAA,GAAAA,IAAU,iLAS1B8E,GAAiB9E,EAAAA,GAAAA,IAAU,gMACtBI,EAAAA,GAAAA,OAQL2E,GAAQ/E,EAAAA,GAAAA,IAAU,yDAIlBgF,GAAYhF,EAAAA,GAAAA,IAAU,gGAMtBiF,IAAYjF,EAAAA,EAAAA,IAAOkF,GAAAA,GAAPlF,CAAY,uEAKxBmF,GAAanF,EAAAA,GAAAA,MAAAA,MAAmB,CAC3CoB,KAAM,SADkBpB,CAExB,sLAcWoF,GAAUpF,EAAAA,GAAAA,IAAU,kLAOXI,EAAAA,GAAAA,OAITiF,GAAcrF,EAAAA,GAAAA,IAAU,gTAafI,EAAAA,GAAAA,OAKTkF,GAAStF,EAAAA,GAAAA,IAAU,4hBAO5B+E,GACS3E,EAAAA,GAAAA,KAKP+E,GAAwBE,GAMxBF,GAAwBJ,GACjB3E,EAAAA,GAAAA,QACWA,EAAAA,GAGlB+E,GAAwBJ,IAWjBQ,GAAoBvF,EAAAA,GAAAA,MAAAA,MAAmB,CAClDoB,KAAM,SADyBpB,CAE/B,4gBAacoF,GACQhF,EAAAA,GAAAA,MACJA,EAAAA,GAAAA,MAGJgF,GAAWL,GASnBK,GACFE,GACAH,GACEE,ICxJKG,GAAmD,SAAH,GAMtD,IALLjF,EAAE,EAAFA,GACAE,EAAQ,EAARA,SACAgF,EAAoB,EAApBA,qBACAC,EAAK,EAALA,MACA/E,EAAQ,EAARA,SAEA,OACE,UAACgE,GAAQ,WACP,WAACC,GAAS,YACR,UAACW,GAAiB,CAAC3B,KAAI,UAAKrD,MAC5B,UAACuE,GAAc,WACb,UAACD,GAAa,WACZ,6BAAOlE,EAAQ,YAGnB,UAACyE,GAAO,UACLO,OAAOC,KAAKF,GAAOG,KAAI,SAACC,GACvB,OACE,WAACR,GAAM,YACL,UAACH,IAAU,oBACL1E,EAAS,GAAD,OAAIF,GAAM,CAAEgB,UAAU,KAAO,IACzCwE,SAAU,SAACC,GAAK,OACdP,GACAA,EAAqBO,EAAMC,OAAO3E,MAAM,EAE1CsC,KAAI,UAAKrD,GACTe,MAAK,UAAKoE,EAAMI,GAAQxE,WAG1B,WAACyD,GAAK,YACJ,UAACE,GAAS,CAACiB,KAAI,UAAKR,EAAMI,GAAQI,MAAQhG,MAAM,QAChD,UAAC8E,GAAS,oBAAKU,EAAMI,GAAQxE,aAG/B,WAAC+D,GAAW,YACV,UAACJ,GAAS,CAACiB,KAAI,UAAKR,EAAMI,GAAQI,MAAQhG,MAAM,QAChD,UAAC8E,GAAS,oBAAKU,EAAMI,GAAQxE,cAlBpBwE,EAsBjB,UAKV,E,WCzCaK,GAA+D,SAAH,GAMlE,IALLC,EAAU,EAAVA,WACAC,EAAS,EAATA,UACA5F,EAAQ,EAARA,SACA6F,EAAY,EAAZA,aACAC,EAAa,EAAbA,cAEM7C,GAAWC,EAAAA,EAAAA,KAYjB,OANA6C,EAAAA,GAAAA,YAAU,WACR,OAAO,WACL9C,GAAS+C,EAAAA,GAAAA,IAAY,QACvB,CACF,GAAG,KAGD,iCACE,WAAChC,GAAe,YACd,WAACC,GAAa,YACZ,UAACc,GAAM,CACLjF,GAAE,UAAK6F,GACP3F,SAAUA,EACViF,MAAOgB,GAAAA,GACPjB,qBAnBmB,SAACkB,GAC5BjD,GACE+C,EAAAA,GAAAA,IAAYE,EAAaC,QAAQ,OAAQ,KAE7C,EAeqD,+BAI5CL,IACC,UAAC,MAAiB,wDAItB,WAAC7B,GAAa,YACZ,UAACc,GAAM,CACLjF,GAAE,UAAK8F,GACP5F,SAAUA,EACViF,MAAOmB,GAAAA,GAAe,4CAIvBP,IACC,WAAC,MAAiB,iEACgB,cAO9C,E,2GC7CaQ,GAAe,WAC1B,OAKIC,EAAAA,GAAAA,MAJFtG,EAAQ,EAARA,SACAuG,EAAY,EAAZA,aACAC,EAAK,EAALA,MACaC,EAAM,EAAnBC,UAAaD,OAETxD,GAAWC,EAAAA,EAAAA,KACXyD,GAAanD,EAAAA,EAAAA,GAAeoD,EAAAA,IAC5BrD,GAAYC,EAAAA,EAAAA,GAAeC,EAAAA,IAC3BoD,GAAerD,EAAAA,EAAAA,GAAesD,GAAAA,IAE9BC,GAAqBvD,EAAAA,EAAAA,GAAewD,GAAAA,IACpCC,GAAeC,EAAAA,GAAAA,IAAsBH,GAErCI,GAAc3D,EAAAA,EAAAA,GAAe4D,GAAAA,IAE7BC,EAAgBR,EAAaxD,MAAQwD,EAAaxD,MAAQ,EAE1DiE,EAA2B,SAACC,GAChCJ,KACGK,EAAAA,GAAAA,IACCL,ECzDmB,SACzBrH,EACA2H,EACApE,EACAqE,EACAC,EACAN,GAEA,MAAO,CACLvH,GAAAA,EACA2H,KAAAA,EACApE,MAAAA,EACAqE,YAAAA,EACAC,aAAAA,EACAN,cAAAA,EAEJ,CD0CQO,CACEC,GAAAA,GE7DoB,WAC5B,IAAMC,EAAc,IAAIC,KAcxB,OAZED,EAAYE,UACZ,KACCF,EAAYG,WAAa,GAC1B,IACAH,EAAYI,cACZ,MACAJ,EAAYK,WACZ,IACAL,EAAYM,aACZ,IACAN,EAAYO,YAGhB,CF8CUC,GACA3B,EAAaU,EACb9D,EACAgE,EACAF,KAGJkB,EAAAA,GAAAA,IAAoBpB,EAAqB5D,IAC3CN,GAASuF,EAAAA,EAAAA,IAAa,IACxB,EAKA,OAJAzC,EAAAA,GAAAA,YAAU,WACRS,EAAMS,EACR,GAAG,CAACA,EAAawB,SAGf,iCACE,WAAC,MAAI,CAAC3E,UAAU,gBAAe,WAC7B,UAAC,MAAc,UACZoB,OAAOC,KAAKuD,GAAAA,IAAkBtD,KAAI,SAACuD,GAClC,MAQID,GAAAA,GAAiBC,GAPnBxF,EAAI,EAAJA,KACAyF,EAAI,EAAJA,KACA7I,EAAW,EAAXA,YAAY,EAAD,EACXI,UAAAA,OAAS,MAAG,EAAC,EACbC,EAAO,EAAPA,QAAQ,EAAD,EACPX,MAAAA,OAAK,MAAG,OAAM,EACXgB,GAAQ,cAEb,OACE,UAAC,MAAiB,kBAChBX,GAAIqD,EACJnD,SAAUA,EACVI,QAASA,EACTD,UAAWA,EACXJ,YAAaA,EACbE,UAAWwG,EAAOtD,GAClB1D,MAAOA,GAEHgB,GAAQ,aAEXmI,IAHIzF,EAMX,OAEF,UAACuC,GAAkB,CACjBE,UAAW2B,GAAAA,GAAAA,UACX5B,WAAY4B,GAAAA,GAAAA,eACZvH,SAAUA,EACV6F,aAAcY,EAAOoC,UACrB/C,cAAeW,EAAOqC,kBAExB,2BACE,oBAAO/H,QAAO,UAAKwG,GAAAA,GAAAA,OAAiB,WAClC,UAACxD,IAAa,SACZpD,KAAK,WACLb,GAAE,UAAKyH,GAAAA,GAAAA,QACHvH,EAAS,GAAD,OAAIuH,GAAAA,GAAAA,OAAkB,CAAEzG,UAAU,MAC9C,uCAED2F,EAAOsC,QACN,UAAC,MAAiB,yCAIxB,UAAC,KAAW,CACVxH,cAAegF,GAAa,SAACgB,GAAQ,OACnCD,EAAyBC,EAAyB,IAClD,0BAOZ,E,4CGtCA,GAnEqB,WACnB,IAAMhE,GAAYC,EAAAA,EAAAA,GAAeC,EAAAA,IAC3BuF,GAAYxF,EAAAA,EAAAA,GAAeoD,EAAAA,IAC3BqC,GAAezF,EAAAA,EAAAA,GAAe0F,EAAAA,IAC9BrC,GAAerD,EAAAA,EAAAA,GAAesD,GAAAA,IAC9BO,EAAgBR,EAAaxD,MAAQwD,EAAaxD,MAAQ,EAC1D8F,GAAWC,EAAAA,GAAAA,MACXC,EAAkB,CACtBC,QAAS,eACTC,QAAS,UACTC,YAAa,OACbpG,SAAU,kBACVC,MAAO,OACPoG,OAAQ,YACRC,UAAW,YACXC,OAAQ,UACRtC,cAAe,iBACfuC,cAAe,mBAOjB,OAJA7D,EAAAA,GAAAA,YAAU,aACP8D,EAAAA,GAAAA,GAAYZ,IAAiBE,EAAS,SACzC,GAAG,CAACF,KAGF,UAACa,GAAA,MAAU,CACTC,SAAUC,GAAAA,GACVC,QAAQ,QACRC,QAAQ,UACRC,KAAK,OAAM,UAEX,WAACpI,EAAiB,YAChB,WAACK,EAAqB,YACpB,UAACC,EAAS,oBAAKgH,EAAgBK,UAAUU,kBACzC,UAAC/D,GAAY,QAEf,WAACrE,EAAwB,YACvB,UAACO,EAAY,oBAAK8G,EAAgBC,QAAQc,kBAC1C,WAACnI,EAAc,YACb,UAACC,EAAW,oBAAKmH,EAAgBE,YACjC,UAACrH,EAAW,oBAAKmH,EAAgBG,gBACjC,UAACtH,EAAW,oBAAKmH,EAAgBjG,aACjC,UAAClB,EAAW,oBAAKmH,EAAgBhG,UACjC,UAACnB,EAAW,oBAAKmH,EAAgBI,aAElClG,EAAU6B,KAAI,SAACiF,EAAaC,GAAa,OACxC,UAACR,GAAA,MAAU,CAETC,SAAUQ,GAAAA,GACVC,OAAQF,EACRL,QAAQ,QACRC,QAAQ,UACRC,KAAK,OAAM,UAEX,UAACpH,GAAY,CAACC,SAAUqH,KAPnBA,EAAYvK,GAQN,KAEf,UAAC,KAAM,oBAAKuJ,EAAgBhC,cAAa,aAAKA,EAAa,cAC3D,UAAC,KAAM,oBAAKgC,EAAgBO,cAAa,aAAKZ,EAAS,cACvD,UAAC7G,EAAK,oBAAKkH,EAAgBM,OAAM,aAC/BX,EAAY3B,EAAa,oBAMrC,C,8FC9FaoD,EAA4B,SAACC,GAAiB,OACzDA,EAAMC,mBAAoB,EAEbC,GAAqBC,EAAAA,EAAAA,IAChC,CAACJ,IACD,SAACE,GAAmB,OAAKA,EAAoBG,YAAY,IAG9ChE,GAAiB+D,EAAAA,EAAAA,IAC5B,CAACJ,IACD,SAACC,GAAK,OAAKA,EAAMK,QAAQ,G,gLCdtB,ICEMlD,EDFa,WAMxB,IANyC,IAAhBmD,EAAM,uDAAG,EAC9BC,EAAS,GACPC,EACJ,iEACIC,EAAmBD,EAAWF,OAE3BI,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAGzD,OAAOF,CACT,CCTuBQ,CAAW,GAErBC,EAAqB,CAChCC,gBAAiB,IAAIC,OAAO,gBAC5BC,eAAgB,IAAID,OAAO,0BAC3BE,YAAa,IAAIF,OAAO,gCACxBG,YAAa,IAAIH,OAAO,gCACxBI,cAAe,IAAIJ,OAAO,gCAC1BK,kBAAmB,IAAIL,OAAO,cAC9BM,aAAc,IAAIN,OAChB,qIAQS5K,EAAuB,CAClCmC,KAAM,YACNgJ,SAAU,WACV1D,MAAO,SACPK,eAAgB,iBAChBsD,KAAM,SACNC,WAAY,QACZC,OAAQ,QACRC,IAAK,MACL1D,UAAW,YACXE,MAAO,SAGIxB,EAAqB,CAChCpE,KAAM,OACNgJ,SAAU,WACV1D,MAAO,QACPK,eAAgB,iBAChBsD,KAAM,OACNC,WAAY,aACZC,OAAQ,SACRC,IAAK,MACL1D,UAAW,YACXE,MAAO,SAqBIL,EAAqC,CAChDvF,KAAM,CACJA,KAAMoE,EAASpE,KACfpD,YAAa,YACb6I,KAAM,iFACNzI,UAAW,EACXC,QAASsL,EAAmBI,YAC5BrM,MAAO,OAET0M,SAAU,CACRhJ,KAAMoE,EAAS4E,SACfpM,YAAa,WACb6I,KAAM,8DACNzI,UAAW,EACXC,QAASsL,EAAmBC,gBAC5BlM,MAAO,OAETgJ,MAAO,CACLtF,KAAMoE,EAASkB,MACf1I,YAAa,SACb6I,KAAM,iGACNzI,UAAW,EACXC,QAASsL,EAAmBQ,aAC5BzM,MAAO,OAET2M,KAAM,CACJjJ,KAAMoE,EAAS6E,KACfrM,YAAa,SACb6I,KAAM,kFACNzI,UAAW,EACXC,QAASsL,EAAmBK,YAC5BtM,MAAO,OAET6M,OAAQ,CACNnJ,KAAMoE,EAAS+E,OACfvM,YAAa,cACb6I,KAAM,wGACNzI,UAAW,EACXC,QAASsL,EAAmBM,cAC5BvM,MAAO,IAET4M,WAAY,CACVlJ,KAAMoE,EAAS8E,WACftM,YAAa,aACb6I,KAAM,kFACNzI,UAAW,EACXC,QAASsL,EAAmBO,kBAC5BxM,MAAO,OAET8M,IAAK,CACHpJ,KAAMoE,EAASgF,IACfxM,YAAa,MACb6I,KAAM,+CACNzI,UAAW,EACXC,QAASsL,EAAmBG,eAC5BpM,MAAO,SAIEwG,EAAmC,CAC9CuG,OAAQ,CAAE3L,MAAO,gBAAiB4E,KAAM,4BACxCgH,IAAK,CAAE5L,MAAO,aAAc4E,KAAM,kBAClCiH,OAAQ,CAAE7L,MAAO,gBAAiB4E,KAAM,2BACxCkH,MAAO,CAAE9L,MAAO,eAAgB4E,KAAM,cAG3BW,EAAiB,CAC5BwG,KAAM,CAAE/L,MAAO,OAAQ4E,KAAM,4BAC7BoH,QAAS,CAAEhM,MAAO,qBAAsB4E,KAAM,2BAC9CqH,YAAa,CAAEjM,MAAO,eAAgB4E,KAAM,gC","sources":["components/checkoutForm/checkoutFormInputs/textInput/checkoutFormInput.styles.ts","components/checkoutForm/checkoutFormInputs/textInput/checkoutFormInput.component.tsx","globalStyles/form/form.globalStyles.ts","globalStyles/form/formButtons/formButtons.styles.ts","globalStyles/form/formButtons/formButtons.component.tsx","routes/checkout/checkoutPage.styles.ts","components/checkoutItem/checkoutItem.styles.tsx","components/checkoutItem/checkoutItem.component.tsx","components/checkoutForm/checkoutForm.styles.ts","components/checkoutForm/checkoutFormInputs/selectInput/checkoutFormSelect.styles.ts","components/checkoutForm/checkoutFormInputs/selectInput/select/select.styles.ts","components/checkoutForm/checkoutFormInputs/selectInput/select/select.component.tsx","components/checkoutForm/checkoutFormInputs/selectInput/checkoutFormSelect.component.tsx","components/checkoutForm/checkoutForm.component.tsx","utils/store/orderCreator.utils.ts","utils/reusableFunctions/getTime.function.ts","routes/checkout/checkoutPage.route.tsx","store/orderHistory/orderHistory.selector.ts","utils/reusableFunctions/generateId.function.ts","utils/checkoutForm/checkoutForm.utils.ts"],"sourcesContent":["import { Colors } from \"../../../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const InputContainer = styled.div<{ width: string }>`\r\n  width: ${(props) => props.width};\r\n  position: relative;\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nexport const InputLabel = styled.label`\r\n  position: absolute;\r\n  left: 0.7rem;\r\n  top: 0.9rem;\r\n  transition: all 0.2s;\r\n  padding: 0 0.1rem;\r\n  z-index: 1;\r\n  color: ${Colors.dark};\r\n  transition: all 0.3s;\r\n  opacity: 0;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    height: 0.3rem;\r\n    background-color: ${Colors.light};\r\n    position: absolute;\r\n    left: 0rem;\r\n    top: 0.7rem;\r\n    width: 100%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0.8rem;\r\n  background: ${Colors.light};\r\n  border-image-slice: 1;\r\n  border-image-source: linear-gradient(\r\n    to left,\r\n    ${Colors.primary},\r\n    ${Colors.dark}\r\n  );\r\n  border-radius: 0.5rem;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  transition: all 0.2s;\r\n  color: ${Colors.dark};\r\n  transition: all 0.5s;\r\n\r\n  &:focus {\r\n    border-image-source: linear-gradient(\r\n      to left,\r\n      ${Colors.dark},\r\n      ${Colors.primary}\r\n    );\r\n    border-radius: 0.5rem;\r\n    transition: all 0.5s;\r\n  }\r\n\r\n  &:focus + ${InputLabel},.filled {\r\n    top: -0.7rem;\r\n    color: ${Colors.dark};\r\n    font-size: 0.9rem;\r\n    opacity: 1;\r\n  }\r\n\r\n  &::placeholder {\r\n    opacity: 0.5;\r\n    font-size: 1rem;\r\n    transition: all 0.5s;\r\n  }\r\n  &:focus::placeholder {\r\n    opacity: 1;\r\n    animation-delay: 0.3s;\r\n  }\r\n`;\r\n","import { FC, PropsWithChildren } from \"react\";\r\nimport {\r\n  FieldError,\r\n  FieldErrorsImpl,\r\n  Merge,\r\n  ValidationRule\r\n} from \"react-hook-form\";\r\nimport type { FieldValues } from \"react-hook-form/dist/types/fields\";\r\nimport type { UseFormRegister } from \"react-hook-form/dist/types/form\";\r\nimport { NonValidFormInput } from \"../../../../globalStyles/form/form.globalStyles\";\r\nimport { PLFormData } from \"../../../../utils/checkoutForm/checkoutForm.utils\";\r\nimport {\r\n  InputContainer,\r\n  InputLabel,\r\n  TextInput\r\n} from \"./checkoutFormInput.styles\";\r\n\r\ntype CheckoutFormInput = {\r\n  id: string;\r\n  placeholder: string;\r\n  register: UseFormRegister<FieldValues>;\r\n  errorName: FieldError | Merge<FieldError, FieldErrorsImpl<any>> | undefined;\r\n  inputType?: string;\r\n  minLength?: ValidationRule<number> | undefined;\r\n  pattern?: ValidationRule<RegExp> | undefined;\r\n  width?: string;\r\n  disabledText?: boolean;\r\n  idPlus?: string;\r\n  initValue?: string;\r\n};\r\n\r\nexport const CheckoutFormInput: FC<PropsWithChildren<CheckoutFormInput>> = ({\r\n  id,\r\n  placeholder,\r\n  register,\r\n  errorName,\r\n  children,\r\n  minLength,\r\n  pattern,\r\n  width,\r\n  inputType,\r\n  idPlus,\r\n  disabledText,\r\n  initValue,\r\n  ...restArgs\r\n}) => {\r\n  return (\r\n    <InputContainer width={`${width && width}`}>\r\n      <TextInput\r\n        autoComplete=\"off\"\r\n        type={inputType}\r\n        id={`${id}` + idPlus}\r\n        placeholder={`${placeholder}`}\r\n        disabled={disabledText}\r\n        value={initValue !== \"---\" ? initValue : \" \"}\r\n        {...register(`${id}`, {\r\n          required: true,\r\n          minLength: minLength,\r\n          pattern: pattern,\r\n          ...restArgs\r\n        })}\r\n      />\r\n      <InputLabel htmlFor={`${id}`}>{PLFormData[id]}</InputLabel>\r\n      {errorName && <NonValidFormInput>{children}</NonValidFormInput>}\r\n    </InputContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  // border: 2px solid red;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  \r\n`;\r\n\r\nexport const FormTextInputs = styled.div`\r\n  // border: 2px solid red;\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.75));\r\n`;\r\n\r\nexport const NonValidFormInput = styled.p`\r\n  // border: 2px solid red;\r\n  font-size: 0.5rem;\r\n  color: red;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { StandardFlexContainer } from \"../../../global.styles\";\r\n\r\nexport const FormButtonsContainer = styled(StandardFlexContainer)`\r\n  // border: 2px solid red;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  align-items: space-between;w\r\n  justify-content: space-between;\r\n  padding: 1rem 0rem 0 0rem;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.75));\r\n`;\r\n","import { BaseSyntheticEvent, FC, PropsWithChildren } from \"react\";\r\nimport Button, {\r\n  BUTTON_TYPE_CLASSES\r\n} from \"../../../components/button/button.component\";\r\nimport { FormButtonsContainer } from \"./formButtons.styles\";\r\ntype FormButtonsProps = {\r\n  submitHandler: (\r\n    e?: BaseSyntheticEvent<object, unknown, unknown> | undefined\r\n  ) => Promise<void>;\r\n  buttonTypeProp?: BUTTON_TYPE_CLASSES;\r\n  idPlus?: string;\r\n};\r\n\r\nexport const FormButtons: FC<PropsWithChildren<FormButtonsProps>> = ({\r\n  children,\r\n  submitHandler,\r\n  buttonTypeProp,\r\n  idPlus\r\n}) => {\r\n  const BTNType = !buttonTypeProp\r\n    ? BUTTON_TYPE_CLASSES.formButton\r\n    : buttonTypeProp;\r\n  return (\r\n    <FormButtonsContainer>\r\n      <Button\r\n        data-testid=\"submit\"\r\n        id={\"submitForm\" + `${idPlus ? idPlus : \"\"}`}\r\n        type=\"submit\"\r\n        buttonType={BTNType}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          submitHandler();\r\n        }}\r\n      >\r\n        {children}\r\n      </Button>\r\n    </FormButtonsContainer>\r\n  );\r\n};\r\n","import { Colors, H3, Title } from \"../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const CheckoutContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  align-items: start;\r\n  justify-content: space-around;\r\n  padding: 2rem 2rem;\r\n  // border: 2px solid red;\r\n`;\r\n\r\nexport const CheckoutSummaryContainer = styled.div`\r\n  width: 50%;\r\n  // min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 0 0 1rem;\r\n  // border-left: 1px solid ${Colors.darkRGBA};\r\n`;\r\n\r\nexport const CheckoutHeader = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid ${Colors.dark};\r\n`;\r\n\r\nexport const HeaderBlock = styled.div`\r\ntext-transform: capitalize;\r\nwidth: 25%;\r\n\r\n&:last-child {\r\n\twidth: 10%;\r\n\t`;\r\n\r\nexport const Total = styled(\"footer\")`\r\n  // font-weight: 00;\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 32px;\r\n`;\r\n\r\nexport const CheckoutFormContainer = styled.div`\r\n  // border: 2px solid red;\r\n  width: 40%;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  padding: 0 1rem 0 0;\r\n`;\r\n\r\nexport const FormTitle = styled(Title)``;\r\n\r\nexport const SummaryTitle = styled(Title)``;\r\n","import { Colors } from \"../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid ${Colors.dark};\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  // gap: 1rem;\r\n  // border: 2px solid red;\r\n`;\r\nexport const RemoveButton = styled.div`\r\n  // font-size: 1rem;\r\n  padding-left: 12px;\r\n  width: 10%;\r\n  cursor: pointer;\r\n  // border: 2px solid red;\r\n`;\r\n\r\nexport const Image = styled(\"img\")`\r\n  width: 23%;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  // border: 2px solid red;\r\n`;\r\n\r\nexport const Span = styled.div`\r\n  width: 22%;\r\n  margin: 0 .3rem;\r\n  // border: 2px solid red;\r\n`;\r\nexport const Quantity = styled(Span)`\r\n  display: flex;\r\n`;\r\n\r\nexport const Arrow = styled.div`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Value = styled.div`\r\n  margin: 0 10px;\r\n`;\r\n","import { FC } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/hooks\";\r\nimport {\r\n  addItemToCart,\r\n  removeItemFromCart\r\n} from \"../../store/cartReducer/cart.actions\";\r\nimport { selectCartItems } from \"../../store/cartReducer/cart.selector\";\r\nimport { CartItem } from \"../../store/cartReducer/cart.types\";\r\n\r\nimport {\r\n  CheckoutItemContainer,\r\n  RemoveButton,\r\n  Quantity,\r\n  Image,\r\n  Arrow,\r\n  Value,\r\n  Span\r\n} from \"./checkoutItem.styles\";\r\n\r\ntype CheckoutItemProps = {\r\n  cartItem: CartItem;\r\n};\r\n\r\nexport const CheckoutItem: FC<CheckoutItemProps> = ({ cartItem }) => {\r\n  const dispatch = useAppDispatch();\r\n  const { name, quantity, price, image } = cartItem;\r\n  const cartItems = useAppSelector(selectCartItems);\r\n\r\n  const addItemHandler = () => {\r\n    dispatch(addItemToCart(cartItems, cartItem));\r\n  };\r\n\r\n  const removeOneItemHandler = () => {\r\n    dispatch(removeItemFromCart(cartItems, cartItem));\r\n  };\r\n\r\n  const removeItemHandler = () => {\r\n    dispatch(removeItemFromCart(cartItems, cartItem, true));\r\n  };\r\n\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <Image src={`/dataBaseImages/${image}`} alt={`Obraz: ${name}`} />\r\n      <Span>{name}</Span>\r\n      <Quantity>\r\n        <Arrow onClick={removeOneItemHandler}>&#10094;</Arrow>\r\n        <Value>{quantity}</Value>\r\n        <Arrow onClick={addItemHandler}>&#10095;</Arrow>\r\n      </Quantity>\r\n      <Span>{`${quantity * price}zł`}</Span>\r\n      <RemoveButton className=\"remove-button\" onClick={removeItemHandler}>\r\n        &#10005;\r\n      </RemoveButton>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\n","import { Colors } from \"../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const InputCheckbox = styled.input`\r\n  // border: 2px solid red;\r\n  -moz-appearance: none;\r\n  -webkit-appearance: none;\r\n  -o-appearance: none;\r\n  outline: none;\r\n  content: none;\r\n  // margin: 0 0 0 1rem;\r\n  &[type=\"checkbox\"]:before {\r\n    font-family: \"FontAwesome\";\r\n    content: \"\\f\";\r\n    font-size: 15px;\r\n    color: transparent !important;\r\n    background: transparent;\r\n    display: block;\r\n    width: 15px;\r\n    height: 15px;\r\n\r\n    border: 1.5px solid;\r\n    border-image-source: linear-gradient(\r\n      to left,\r\n      ${Colors.primary},\r\n      ${Colors.dark},\r\n      ${Colors.primary}\r\n    );\r\n    border-image-slice: 2;\r\n    margin-right: 7px;\r\n  }\r\n\r\n  &[type=\"checkbox\"]:checked:before {\r\n    color: transparent !important;\r\n    background: ${Colors.primary};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SelectContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const SelectContent = styled.div`\r\n  // border: 2px solid red;\r\n  width: 48%;\r\n`;\r\n","import { Icon } from \"@iconify/react\";\r\nimport { Colors } from \"../../../../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const AppCover = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 3rem;\r\n  margin: 1rem auto 1rem auto;\r\n  z-index: 1;\r\n  color: ${Colors.darkRGBA};\r\n  border: 2px solid;\r\n  border-image-slice: 1;\r\n  border-image-source: linear-gradient(\r\n    to top,\r\n    ${Colors.dark},\r\n    ${Colors.primary},\r\n    ${Colors.dark}\r\n  );\r\n`;\r\n\r\nexport const SelectBox = styled.div`\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n`;\r\nexport const SelectedValue = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  font-size: 1rem;\r\n  line-height: 1;\r\n  margin-right: 1.5rem;\r\n  width: 100%;\r\n  /* border: 2px solid red; */\r\n`;\r\nexport const SelectedButton = styled.div`\r\n  border-color: ${Colors.light};\r\n  position: relative;\r\n  height: 100%;\r\n  padding: 0.5rem 0.9rem;\r\n  background-color: transparent;\r\n  border-radius: 0.3rem;\r\n  cursor: pointer;\r\n`;\r\nexport const Label = styled.div`\r\n  display: none;\r\n  padding: 0;\r\n`;\r\nexport const LabelText = styled.div`\r\n  width: 70%;\r\n  /* border: 2px solid red; */\r\n  padding: 0.8rem 0rem;\r\n`;\r\n\r\nexport const LabelIcon = styled(Icon)`\r\n  width: 20%;\r\n  /* border: 2px solid red; */\r\n`;\r\n\r\nexport const InputRadio = styled.input.attrs({\r\n  type: \"radio\"\r\n})`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  margin: 0;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  z-index: 4;\r\n`;\r\n\r\nexport const Options = styled.div`\r\n  position: absolute;\r\n  top: 3rem;\r\n  right: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  background-color: ${Colors.white};\r\n  /* border-radius: 0.3rem; */\r\n`;\r\n\r\nexport const OptionValue = styled.div`\r\n  position: absolute;\r\n  left: 0rem;\r\n  top: 0rem;\r\n  bottom: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  width: 100%;\r\n  height: 2rem;\r\n  opacity: 0;\r\n  background-color: ${Colors.light};\r\n  transform: scale(0);\r\n  // border: 2px solid red;\r\n`;\r\n\r\nexport const Option = styled.div`\r\n  position: relative;\r\n  line-height: 1;\r\n  transition: 0.3s ease all;\r\n  z-index: 2;\r\n\r\n  &,\r\n  ${Label} {\r\n    color: ${Colors.dark};\r\n    font-size: 1rem;\r\n    /* border: 2px solid red; */\r\n  }\r\n\r\n  & ${InputRadio}:checked ~ ${OptionValue} {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n    position: absolute;\r\n  }\r\n\r\n  & ${InputRadio}:checked ~ ${Label} {\r\n    color: ${Colors.primary};\r\n    background-color: ${Colors};\r\n  }\r\n\r\n  & ${InputRadio}:checked ~ ${Label}:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport const OptionsViewButton = styled.input.attrs({\r\n  type: \"radio\"\r\n})`\r\n  position: absolute;\r\n  top: 0;\r\n  /* right: 0; */\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  z-index: 3;\r\n\r\n  &:checked ~ ${Options} {\r\n    border: 1px solid ${Colors.light};\r\n    border-color: ${Colors.light};\r\n  }\r\n\r\n  &:checked ~ ${Options} ${Label} {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 0.5rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  &:not(:checked)\r\n    ~ ${Options}\r\n    ${Option}\r\n    ${InputRadio}:checked\r\n    ~ ${OptionValue} {\r\n    top: -40px;\r\n  }\r\n`;\r\n","import { FC, PropsWithChildren } from \"react\";\r\nimport { FieldValues, UseFormRegister } from \"react-hook-form\";\r\nimport { DeliveryOptions } from \"../../../../../utils/checkoutForm/checkoutForm.utils\";\r\nimport {\r\n  AppCover,\r\n  InputRadio,\r\n  Label,\r\n  LabelIcon,\r\n  LabelText,\r\n  Option,\r\n  Options,\r\n  OptionsViewButton,\r\n  OptionValue,\r\n  SelectBox,\r\n  SelectedButton,\r\n  SelectedValue\r\n} from \"./select.styles\";\r\ntype CheckoutFormInput = {\r\n  id: string;\r\n  register: UseFormRegister<FieldValues>;\r\n  datas: DeliveryOptions;\r\n  deliveryPriceHandler?: (deliveryType: string) => void;\r\n};\r\n\r\nexport const Select: FC<PropsWithChildren<CheckoutFormInput>> = ({\r\n  id,\r\n  register,\r\n  deliveryPriceHandler,\r\n  datas,\r\n  children\r\n}) => {\r\n  return (\r\n    <AppCover>\r\n      <SelectBox>\r\n        <OptionsViewButton name={`${id}`} />\r\n        <SelectedButton>\r\n          <SelectedValue>\r\n            <span>{children} </span>\r\n          </SelectedValue>\r\n        </SelectedButton>\r\n        <Options>\r\n          {Object.keys(datas).map((option) => {\r\n            return (\r\n              <Option key={option}>\r\n                <InputRadio\r\n                  {...register(`${id}`, { required: true })}\r\n                  onChange={(event) =>\r\n                    deliveryPriceHandler &&\r\n                    deliveryPriceHandler(event.target.value)\r\n                  }\r\n                  name={`${id}`}\r\n                  value={`${datas[option].value}`}\r\n                />\r\n\r\n                <Label>\r\n                  <LabelIcon icon={`${datas[option].icon}`} width=\"32\" />\r\n                  <LabelText>{`${datas[option].value}`}</LabelText>\r\n                </Label>\r\n\r\n                <OptionValue>\r\n                  <LabelIcon icon={`${datas[option].icon}`} width=\"32\" />\r\n                  <LabelText>{`${datas[option].value}`}</LabelText>\r\n                </OptionValue>\r\n              </Option>\r\n            );\r\n          })}\r\n        </Options>\r\n      </SelectBox>\r\n    </AppCover>\r\n  );\r\n};\r\n","import { useAppDispatch } from \"../../../../hooks/hooks\";\r\nimport { FC, PropsWithChildren, useEffect } from \"react\";\r\nimport { FieldError, FieldErrorsImpl, Merge } from \"react-hook-form\";\r\nimport type { FieldValues } from \"react-hook-form/dist/types/fields\";\r\nimport type { UseFormRegister } from \"react-hook-form/dist/types/form\";\r\nimport { setDelivery } from \"../../../../store/orderHistory/orderHistory.action\";\r\nimport { DeliveryType } from \"../../../../store/orderHistory/orderHistory.types\";\r\nimport {\r\n  deliveryOptions,\r\n  paymentOptions\r\n} from \"../../../../utils/checkoutForm/checkoutForm.utils\";\r\nimport { SelectContainer, SelectContent } from \"./checkoutFormSelect.styles\";\r\nimport { Select } from \"./select/select.component\";\r\nimport { NonValidFormInput } from \"../../../../globalStyles/form/form.globalStyles\";\r\n\r\ntype CheckoutFormInput = {\r\n  idDelivery: string;\r\n  idPayment: string;\r\n  register: UseFormRegister<FieldValues>;\r\n  errorPayment:\r\n    | FieldError\r\n    | Merge<FieldError, FieldErrorsImpl<any>>\r\n    | undefined;\r\n  errorDelivery:\r\n    | FieldError\r\n    | Merge<FieldError, FieldErrorsImpl<any>>\r\n    | undefined;\r\n};\r\n\r\nexport const CheckoutFormSelect: FC<PropsWithChildren<CheckoutFormInput>> = ({\r\n  idDelivery,\r\n  idPayment,\r\n  register,\r\n  errorPayment,\r\n  errorDelivery\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n  const deliveryPriceHandler = (deliveryType: string) => {\r\n    dispatch(\r\n      setDelivery(deliveryType.replace(/\\s+/g, \"\") as DeliveryType[\"type\"])\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setDelivery(\"None\"));\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SelectContainer>\r\n        <SelectContent>\r\n          <Select\r\n            id={`${idDelivery}`}\r\n            register={register}\r\n            datas={deliveryOptions}\r\n            deliveryPriceHandler={deliveryPriceHandler}\r\n          >\r\n            Sposób dostawy\r\n          </Select>\r\n          {errorDelivery && (\r\n            <NonValidFormInput>Wybierz proszę sposób dostawy</NonValidFormInput>\r\n          )}\r\n        </SelectContent>\r\n\r\n        <SelectContent>\r\n          <Select\r\n            id={`${idPayment}`}\r\n            register={register}\r\n            datas={paymentOptions}\r\n          >\r\n            Metoda płatność\r\n          </Select>\r\n          {errorPayment && (\r\n            <NonValidFormInput>\r\n              Wybierz proszę metodę płatności{\" \"}\r\n            </NonValidFormInput>\r\n          )}\r\n        </SelectContent>\r\n      </SelectContainer>\r\n    </>\r\n  );\r\n};\r\n","import { useAppDispatch, useAppSelector } from \"../../hooks/hooks\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setCartItems } from \"../../store/cartReducer/cart.actions\";\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal\r\n} from \"../../store/cartReducer/cart.selector\";\r\nimport { selectDelivery } from \"../../store/orderHistory/orderHistory.selector\";\r\nimport { DeliveryData } from \"../../store/orderHistory/orderHistory.types\";\r\nimport {\r\n  formData,\r\n  formDataInputMap,\r\n  orderId\r\n} from \"../../utils/checkoutForm/checkoutForm.utils\";\r\nimport { getCurrentTime } from \"../../utils/reusableFunctions/getTime.function\";\r\nimport { orderCreator } from \"../../utils/store/orderCreator.utils\";\r\nimport { InputCheckbox } from \"./checkoutForm.styles\";\r\nimport { CheckoutFormInput } from \"./checkoutFormInputs/textInput/checkoutFormInput.component\";\r\nimport { CheckoutFormSelect } from \"./checkoutFormInputs/selectInput/checkoutFormSelect.component\";\r\nimport {\r\n  Form,\r\n  FormTextInputs,\r\n  NonValidFormInput\r\n} from \"../../globalStyles/form/form.globalStyles\";\r\nimport { FormButtons } from \"../../globalStyles/form/formButtons/formButtons.component\";\r\nimport {\r\n  resetUsersCartItems,\r\n  updateUsersOrderHistory\r\n} from \"../../utils/firebase/functions/dbManipulationFunctions.FBFunctions\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectCurrentUserFormData\r\n} from \"../../store/userReducer/user.selector\";\r\nimport { type User } from \"firebase/auth\";\r\nimport { profileDetailsCreator } from \"../../utils/reusableFunctions/profileDetailsCreator.Functions\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const CheckoutForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm();\r\n  const dispatch = useAppDispatch();\r\n  const totalPrice = useAppSelector(selectCartTotal);\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const deliveryInfo = useAppSelector(selectDelivery);\r\n\r\n  const usersProfileDBData = useAppSelector(selectCurrentUserFormData);\r\n  const userFormData = profileDetailsCreator(usersProfileDBData);\r\n\r\n  const currentUser = useAppSelector(selectCurrentUser);\r\n\r\n  const deliveryPrice = deliveryInfo.price ? deliveryInfo.price : 0;\r\n\r\n  const addToOrderHistoryHandler = (formData: DeliveryData) => {\r\n    currentUser &&\r\n      (updateUsersOrderHistory(\r\n        currentUser as User,\r\n        orderCreator(\r\n          orderId,\r\n          getCurrentTime(),\r\n          totalPrice + deliveryPrice,\r\n          cartItems,\r\n          formData,\r\n          deliveryPrice\r\n        )\r\n      ),\r\n      resetUsersCartItems(currentUser as User, cartItems));\r\n    dispatch(setCartItems([]));\r\n  };\r\n  useEffect(() => {\r\n    reset(userFormData);\r\n  }, [userFormData.email]);\r\n\r\n  return (\r\n    <>\r\n      <Form className=\"was-validated\">\r\n        <FormTextInputs>\r\n          {Object.keys(formDataInputMap).map((input) => {\r\n            const {\r\n              name,\r\n              text,\r\n              placeholder,\r\n              minLength = 2,\r\n              pattern,\r\n              width = \"5rem\",\r\n              ...restArgs\r\n            } = formDataInputMap[input];\r\n            return (\r\n              <CheckoutFormInput\r\n                id={name}\r\n                register={register}\r\n                pattern={pattern}\r\n                minLength={minLength}\r\n                placeholder={placeholder}\r\n                errorName={errors[name]}\r\n                width={width}\r\n                key={name}\r\n                {...restArgs}\r\n              >\r\n                {text}\r\n              </CheckoutFormInput>\r\n            );\r\n          })}\r\n        </FormTextInputs>\r\n        <CheckoutFormSelect\r\n          idPayment={formData.payMethod as string}\r\n          idDelivery={formData.deliveryMethod as string}\r\n          register={register}\r\n          errorPayment={errors.payMethod}\r\n          errorDelivery={errors.deliveryMethod}\r\n        />\r\n        <div>\r\n          <label htmlFor={`${formData.terms}`}>\r\n            <InputCheckbox\r\n              type=\"checkbox\"\r\n              id={`${formData.terms}`}\r\n              {...register(`${formData.terms}`, { required: true })}\r\n            />\r\n            Zgadzam się na warunki i zasady\r\n            {errors.terms && (\r\n              <NonValidFormInput>Wymagana jest zgoda </NonValidFormInput>\r\n            )}\r\n          </label>\r\n        </div>\r\n        <FormButtons\r\n          submitHandler={handleSubmit((formData) =>\r\n            addToOrderHistoryHandler(formData as DeliveryData)\r\n          )}\r\n        >\r\n          Zamawiam\r\n        </FormButtons>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import { DeliveryData, Order, OrderItem } from \"../../store/orderHistory/orderHistory.types\";\r\n\r\nexport const orderCreator= (\r\n  id: string,\r\n  time: string,\r\n  price: number,\r\n  itemsBought: OrderItem[],\r\n  deliveryData: DeliveryData,\r\n  deliveryPrice: number\r\n):Order => {\r\n  return {\r\n    id,\r\n    time,\r\n    price,\r\n    itemsBought,\r\n    deliveryData,\r\n    deliveryPrice\r\n  };\r\n};\r\n","export const getCurrentTime = () => {\r\n  const currentdate = new Date();\r\n  const datetime =\r\n    currentdate.getDate() +\r\n    \"/\" +\r\n    (currentdate.getMonth() + 1) +\r\n    \"/\" +\r\n    currentdate.getFullYear() +\r\n    \" @ \" +\r\n    currentdate.getHours() +\r\n    \":\" +\r\n    currentdate.getMinutes() +\r\n    \":\" +\r\n    currentdate.getSeconds();\r\n\r\n  return datetime;\r\n};\r\n","import { useAppSelector } from \"../../hooks/hooks\";\r\n\r\nimport {\r\n  CheckoutContainer,\r\n  CheckoutSummaryContainer,\r\n  CheckoutHeader,\r\n  HeaderBlock,\r\n  Total,\r\n  CheckoutFormContainer,\r\n  FormTitle,\r\n  SummaryTitle\r\n} from \"./checkoutPage.styles\";\r\nimport {\r\n  selectCartCount,\r\n  selectCartItems,\r\n  selectCartTotal\r\n} from \"../../store/cartReducer/cart.selector\";\r\nimport { CheckoutItem } from \"../../components/checkoutItem/checkoutItem.component\";\r\n\r\nimport { CheckoutForm } from \"../../components/checkoutForm/checkoutForm.component\";\r\nimport { PLarge } from \"../../global.styles\";\r\nimport { selectDelivery } from \"../../store/orderHistory/orderHistory.selector\";\r\nimport { useEffect } from \"react\";\r\nimport { isCartEmpty } from \"../../utils/reusableFunctions/isCartEmpty.function\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  CheckoutVariants,\r\n  ShoppingPageVariants\r\n} from \"../../utils/framer-motion/variants.utils\";\r\n\r\nconst CheckoutPage = () => {\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const totalCost = useAppSelector(selectCartTotal);\r\n  const cartQuantity = useAppSelector(selectCartCount);\r\n  const deliveryInfo = useAppSelector(selectDelivery);\r\n  const deliveryPrice = deliveryInfo.price ? deliveryInfo.price : 0;\r\n  const navigate = useNavigate();\r\n  const checkoutHeaders = {\r\n    summary: \"podsumowanie\",\r\n    product: \"produkt\",\r\n    description: \"Opis\",\r\n    quantity: \"Ilość\",\r\n    price: \"Cena\",\r\n    remove: \"Usuń\",\r\n    formularz: \"formularz\",\r\n    wSumie: \"W sumie\",\r\n    deliveryPrice: \"Przesyłka\",\r\n    productsPrice: \"Cena towarów\"\r\n  };\r\n\r\n  useEffect(() => {\r\n    !isCartEmpty(cartQuantity) && navigate(\"/sklep\");\r\n  }, [cartQuantity]);\r\n\r\n  return (\r\n    <motion.div\r\n      variants={ShoppingPageVariants}\r\n      initial=\"enter\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <CheckoutContainer>\r\n        <CheckoutFormContainer>\r\n          <FormTitle>{`${checkoutHeaders.formularz.toUpperCase()}`}</FormTitle>\r\n          <CheckoutForm />\r\n        </CheckoutFormContainer>\r\n        <CheckoutSummaryContainer>\r\n          <SummaryTitle>{`${checkoutHeaders.summary.toUpperCase()}`}</SummaryTitle>\r\n          <CheckoutHeader>\r\n            <HeaderBlock>{`${checkoutHeaders.product}`}</HeaderBlock>\r\n            <HeaderBlock>{`${checkoutHeaders.description}`}</HeaderBlock>\r\n            <HeaderBlock>{`${checkoutHeaders.quantity}`}</HeaderBlock>\r\n            <HeaderBlock>{`${checkoutHeaders.price}`}</HeaderBlock>\r\n            <HeaderBlock>{`${checkoutHeaders.remove}`}</HeaderBlock>\r\n          </CheckoutHeader>\r\n          {cartItems.map((currentItem, index: number) => (\r\n            <motion.div\r\n              key={currentItem.id}\r\n              variants={CheckoutVariants}\r\n              custom={index}\r\n              initial=\"enter\"\r\n              animate=\"visible\"\r\n              exit=\"exit\"\r\n            >\r\n              <CheckoutItem cartItem={currentItem} />\r\n            </motion.div>\r\n          ))}\r\n          <PLarge>{`${checkoutHeaders.deliveryPrice}: ${deliveryPrice}zł`}</PLarge>\r\n          <PLarge>{`${checkoutHeaders.productsPrice}: ${totalCost}zł`}</PLarge>\r\n          <Total>{`${checkoutHeaders.wSumie}: ${\r\n            totalCost + deliveryPrice\r\n          }zł`}</Total>\r\n        </CheckoutSummaryContainer>\r\n      </CheckoutContainer>\r\n    </motion.div>\r\n  );\r\n};\r\nexport default CheckoutPage;\r\n","import { createSelector } from \"reselect\";\r\nimport { ReduxState } from \"../rootReducer.redux\";\r\nimport { OrderHistoryState } from \"./orderHistory.reducer\";\r\n\r\nexport const selectOrderHistoryReducer = (state: ReduxState): OrderHistoryState =>\r\n  state.orderHistoryReducer;\r\n\r\n  export const selectOrderHistory = createSelector(\r\n    [selectOrderHistoryReducer],\r\n    (orderHistoryReducer) => orderHistoryReducer.orderHistory\r\n  );\r\n  \r\n  export const selectDelivery = createSelector(\r\n    [selectOrderHistoryReducer],\r\n    (state) => state.delivery\r\n  );\r\n  ","export const generateId = (length = 7) => {\r\n  let result = \"\";\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  const charactersLength = characters.length;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n\r\n  return result;\r\n};\r\n","import { generateId } from \"../../utils/reusableFunctions/generateId.function\";\r\n\r\nexport const orderId = generateId(8);\r\n\r\nexport const validationPatterns = {\r\n  lastNamePattern: new RegExp(/^[A-Za-z]+$/i),\r\n  zipCodePattern: new RegExp(/^([0-9]{2}-)?[0-9]{3}$/),\r\n  namePattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  cityPattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  streetPattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  homeAdressPattern: new RegExp(/^([0-9])+$/),\r\n  eMailPattern: new RegExp(\r\n    /^(([A-Za-z0-9]+_+)|([A-Za-z0-9]+-+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+-+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,6}$/\r\n  )\r\n};\r\n\r\nexport type FormData = {\r\n  [key: string]: string;\r\n};\r\n\r\nexport const PLFormData: FormData = {\r\n  name: \"Imię\",\r\n  lastName: \"Nazwisko\",\r\n  email: \"E-mail\",\r\n  deliveryMethod: \"deliveryMethod\",\r\n  city: \"Miasto\",\r\n  homeAdress: \"Adres\",\r\n  street: \"Ulica\",\r\n  zip: \"Zip\",\r\n  payMethod: \"payMethod\",\r\n  terms: \"terms\"\r\n};\r\n\r\nexport const formData: FormData = {\r\n  name: \"name\",\r\n  lastName: \"lastName\",\r\n  email: \"email\",\r\n  deliveryMethod: \"deliveryMethod\",\r\n  city: \"city\",\r\n  homeAdress: \"homeAdress\",\r\n  street: \"street\",\r\n  zip: \"zip\",\r\n  payMethod: \"payMethod\",\r\n  terms: \"terms\"\r\n};\r\n\r\nexport type FormDataInputMapItem = {\r\n  name: string;\r\n  placeholder: string;\r\n  text: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  pattern?: RegExp;\r\n  width?: string;\r\n};\r\n\r\nexport type FormDataInputMap = {\r\n  [key in keyof typeof formData]: FormDataInputMapItem;\r\n};\r\n\r\nexport type DeliveryOptions = {\r\n  [key in keyof typeof formData]: { value: string; icon: string };\r\n};\r\n\r\nexport const formDataInputMap: FormDataInputMap = {\r\n  name: {\r\n    name: formData.name,\r\n    placeholder: \"Imię\",\r\n    text: \"Proszę wpisać imię nie używając znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.namePattern,\r\n    width: \"40%\"\r\n  },\r\n  lastName: {\r\n    name: formData.lastName,\r\n    placeholder: \"Nazwisko\",\r\n    text: \"Wpisz nazwisko nie używając znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.lastNamePattern,\r\n    width: \"56%\"\r\n  },\r\n  email: {\r\n    name: formData.email,\r\n    placeholder: \"E-mail\",\r\n    text: \"Uzupełnij e-mail w formacie 'abcde@acbc.com' nie używając znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.eMailPattern,\r\n    width: \"58%\"\r\n  },\r\n  city: {\r\n    name: formData.city,\r\n    placeholder: \"Miasto\",\r\n    text: \"Wypełnij tę rubrykę nie używając znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.cityPattern,\r\n    width: \"38%\"\r\n  },\r\n  street: {\r\n    name: formData.street,\r\n    placeholder: \"Nazwa ulicy\",\r\n    text: \"To pole jest potrzebne, wpisz poprawną wartość bez używania znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.streetPattern,\r\n    width: \"\"\r\n  },\r\n  homeAdress: {\r\n    name: formData.homeAdress,\r\n    placeholder: \"Numer domu\",\r\n    text: \"Wymagane polę, uzupełnij nie używając znaków specjalnych\",\r\n    minLength: 2,\r\n    pattern: validationPatterns.homeAdressPattern,\r\n    width: \"30%\"\r\n  },\r\n  zip: {\r\n    name: formData.zip,\r\n    placeholder: \"Zip\",\r\n    text: \"Kod pocztowy musi być w formacie XX-XXX\",\r\n    minLength: 5,\r\n    pattern: validationPatterns.zipCodePattern,\r\n    width: \"5rem\"\r\n  }\r\n};\r\n\r\nexport const deliveryOptions: DeliveryOptions = {\r\n  poczta: { value: \"Poczta Polska\", icon: \"fluent-emoji:post-office\" },\r\n  dhl: { value: \"Kurier DHL\", icon: \"fa6-brands:dhl\" },\r\n  inpost: { value: \"Kurier Inpost\", icon: \"arcticons:inpost-mobile\" },\r\n  fedex: { value: \"Kurier FedEx\", icon: \"cib:fedex\" }\r\n};\r\n\r\nexport const paymentOptions = {\r\n  blik: { value: \"Blik\", icon: \"akar-icons:mobile-device\" },\r\n  przelew: { value: \"Przelew tradycyjny\", icon: \"icon-park:bank-transfer\" },\r\n  zaPobraniem: { value: \"Za pobraniem\", icon: \"fluent:money-hand-20-regular\" }\r\n};\r\n"],"names":["InputContainer","styled","props","width","InputLabel","Colors","TextInput","CheckoutFormInput","id","placeholder","register","errorName","children","minLength","pattern","inputType","idPlus","disabledText","initValue","restArgs","autoComplete","type","disabled","value","required","htmlFor","PLFormData","Form","FormTextInputs","NonValidFormInput","FormButtonsContainer","StandardFlexContainer","FormButtons","submitHandler","buttonTypeProp","BTNType","BUTTON_TYPE_CLASSES","buttonType","onClick","e","preventDefault","CheckoutContainer","CheckoutSummaryContainer","CheckoutHeader","HeaderBlock","Total","CheckoutFormContainer","FormTitle","Title","SummaryTitle","CheckoutItemContainer","RemoveButton","Image","Span","Quantity","Arrow","Value","CheckoutItem","cartItem","dispatch","useAppDispatch","name","quantity","price","image","cartItems","useAppSelector","selectCartItems","src","alt","removeItemFromCart","addItemToCart","className","InputCheckbox","SelectContainer","SelectContent","AppCover","SelectBox","SelectedValue","SelectedButton","Label","LabelText","LabelIcon","Icon","InputRadio","Options","OptionValue","Option","OptionsViewButton","Select","deliveryPriceHandler","datas","Object","keys","map","option","onChange","event","target","icon","CheckoutFormSelect","idDelivery","idPayment","errorPayment","errorDelivery","useEffect","setDelivery","deliveryOptions","deliveryType","replace","paymentOptions","CheckoutForm","useForm","handleSubmit","reset","errors","formState","totalPrice","selectCartTotal","deliveryInfo","selectDelivery","usersProfileDBData","selectCurrentUserFormData","userFormData","profileDetailsCreator","currentUser","selectCurrentUser","deliveryPrice","addToOrderHistoryHandler","formData","updateUsersOrderHistory","time","itemsBought","deliveryData","orderCreator","orderId","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","getCurrentTime","resetUsersCartItems","setCartItems","email","formDataInputMap","input","text","payMethod","deliveryMethod","terms","totalCost","cartQuantity","selectCartCount","navigate","useNavigate","checkoutHeaders","summary","product","description","remove","formularz","wSumie","productsPrice","isCartEmpty","motion","variants","ShoppingPageVariants","initial","animate","exit","toUpperCase","currentItem","index","CheckoutVariants","custom","selectOrderHistoryReducer","state","orderHistoryReducer","selectOrderHistory","createSelector","orderHistory","delivery","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","validationPatterns","lastNamePattern","RegExp","zipCodePattern","namePattern","cityPattern","streetPattern","homeAdressPattern","eMailPattern","lastName","city","homeAdress","street","zip","poczta","dhl","inpost","fedex","blik","przelew","zaPobraniem"],"sourceRoot":""}