{"version":3,"file":"static/js/217.1f5bd6f5.chunk.js","mappings":"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","sources":["components/checkoutForm/checkoutFormInputs/textInput/checkoutFormInput.styles.ts","components/checkoutForm/checkoutFormInputs/textInput/checkoutFormInput.component.tsx","globalStyles/form/form.globalStyles.ts","globalStyles/form/formButtons/formButtons.styles.ts","globalStyles/form/formButtons/formButtons.component.tsx","utils/loginPage/sign.utils.ts","components/signInForm/signInForm.component.tsx","components/signUpForm/signUpForm.component.tsx","components/login/login.styles.ts","components/login/login.route.tsx","components/profileDetails/profileDetails.styles.ts","components/profileDetails/profileDetails.component.tsx","routes/myAccount/myAccountPage.styles.ts","routes/myAccount/myAccountPage.route.tsx","utils/reusableFunctions/generateId.function.ts","utils/checkoutForm/checkoutForm.utils.ts"],"sourcesContent":["import { Colors } from \"../../../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const InputContainer = styled.div<{ width: string }>`\r\n  width: ${(props) => props.width};\r\n  position: relative;\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nexport const InputLabel = styled.label`\r\n  position: absolute;\r\n  left: 0.7rem;\r\n  top: 0.9rem;\r\n  transition: all 0.2s;\r\n  padding: 0 0.1rem;\r\n  z-index: 1;\r\n  color: ${Colors.dark};\r\n  transition: all 0.3s;\r\n  opacity: 0;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    height: 0.3rem;\r\n    background-color: ${Colors.light};\r\n    position: absolute;\r\n    left: 0rem;\r\n    top: 0.7rem;\r\n    width: 100%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0.8rem;\r\n  background: ${Colors.light};\r\n  border-image-slice: 1;\r\n  border-image-source: linear-gradient(\r\n    to left,\r\n    ${Colors.primary},\r\n    ${Colors.dark}\r\n  );\r\n  border-radius: 0.5rem;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  transition: all 0.2s;\r\n  color: ${Colors.dark};\r\n  transition: all 0.5s;\r\n\r\n  &:focus {\r\n    border-image-source: linear-gradient(\r\n      to left,\r\n      ${Colors.dark},\r\n      ${Colors.primary}\r\n    );\r\n    border-radius: 0.5rem;\r\n    transition: all 0.5s;\r\n  }\r\n\r\n  &:focus + ${InputLabel},.filled {\r\n    top: -0.7rem;\r\n    color: ${Colors.dark};\r\n    font-size: 0.9rem;\r\n    opacity: 1;\r\n  }\r\n\r\n  &::placeholder {\r\n    opacity: 0.5;\r\n    font-size: 1rem;\r\n    transition: all 0.5s;\r\n  }\r\n  &:focus::placeholder {\r\n    opacity: 1;\r\n    animation-delay: 0.3s;\r\n  }\r\n`;\r\n","import { FC, PropsWithChildren } from \"react\";\r\nimport {\r\n  FieldError,\r\n  FieldErrorsImpl,\r\n  Merge,\r\n  ValidationRule\r\n} from \"react-hook-form\";\r\nimport type { FieldValues } from \"react-hook-form/dist/types/fields\";\r\nimport type { UseFormRegister } from \"react-hook-form/dist/types/form\";\r\nimport { NonValidFormInput } from \"../../../../globalStyles/form/form.globalStyles\";\r\nimport { PLFormData } from \"../../../../utils/checkoutForm/checkoutForm.utils\";\r\nimport {\r\n  InputContainer,\r\n  InputLabel,\r\n  TextInput\r\n} from \"./checkoutFormInput.styles\";\r\n\r\ntype CheckoutFormInput = {\r\n  id: string;\r\n  placeholder: string;\r\n  register: UseFormRegister<FieldValues>;\r\n  errorName: FieldError | Merge<FieldError, FieldErrorsImpl<any>> | undefined;\r\n  inputType?: string;\r\n  minLength?: ValidationRule<number> | undefined;\r\n  pattern?: ValidationRule<RegExp> | undefined;\r\n  width?: string;\r\n  disabledText?: boolean;\r\n  idPlus?: string;\r\n  initValue?: string;\r\n};\r\n\r\nexport const CheckoutFormInput: FC<PropsWithChildren<CheckoutFormInput>> = ({\r\n  id,\r\n  placeholder,\r\n  register,\r\n  errorName,\r\n  children,\r\n  minLength,\r\n  pattern,\r\n  width,\r\n  inputType,\r\n  idPlus,\r\n  disabledText,\r\n  initValue,\r\n  ...restArgs\r\n}) => {\r\n  return (\r\n    <InputContainer width={`${width && width}`}>\r\n      <TextInput\r\n        autoComplete=\"off\"\r\n        type={inputType}\r\n        id={`${id}` + idPlus}\r\n        placeholder={`${placeholder}`}\r\n        disabled={disabledText}\r\n        value={initValue !== \"---\" ? initValue : \" \"}\r\n        {...register(`${id}`, {\r\n          required: true,\r\n          minLength: minLength,\r\n          pattern: pattern,\r\n          ...restArgs\r\n        })}\r\n      />\r\n      <InputLabel htmlFor={`${id}`}>{PLFormData[id]}</InputLabel>\r\n      {errorName && <NonValidFormInput>{children}</NonValidFormInput>}\r\n    </InputContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  // border: 2px solid red;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  \r\n`;\r\n\r\nexport const FormTextInputs = styled.div`\r\n  // border: 2px solid red;\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.75));\r\n`;\r\n\r\nexport const NonValidFormInput = styled.p`\r\n  // border: 2px solid red;\r\n  font-size: 0.5rem;\r\n  color: red;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { StandardFlexContainer } from \"../../../global.styles\";\r\n\r\nexport const FormButtonsContainer = styled(StandardFlexContainer)`\r\n  // border: 2px solid red;\r\n  width: 100%;\r\n  flex-direction: row;\r\n  align-items: space-between;w\r\n  justify-content: space-between;\r\n  padding: 1rem 0rem 0 0rem;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.75));\r\n`;\r\n","import { BaseSyntheticEvent, FC, PropsWithChildren } from \"react\";\r\nimport Button, {\r\n  BUTTON_TYPE_CLASSES\r\n} from \"../../../components/button/button.component\";\r\nimport { FormButtonsContainer } from \"./formButtons.styles\";\r\ntype FormButtonsProps = {\r\n  submitHandler: (\r\n    e?: BaseSyntheticEvent<object, unknown, unknown> | undefined\r\n  ) => Promise<void>;\r\n  buttonTypeProp?: BUTTON_TYPE_CLASSES;\r\n  idPlus?: string;\r\n};\r\n\r\nexport const FormButtons: FC<PropsWithChildren<FormButtonsProps>> = ({\r\n  children,\r\n  submitHandler,\r\n  buttonTypeProp,\r\n  idPlus\r\n}) => {\r\n  const BTNType = !buttonTypeProp\r\n    ? BUTTON_TYPE_CLASSES.formButton\r\n    : buttonTypeProp;\r\n  return (\r\n    <FormButtonsContainer>\r\n      <Button\r\n        data-testid=\"submit\"\r\n        id={\"submitForm\" + `${idPlus ? idPlus : \"\"}`}\r\n        type=\"submit\"\r\n        buttonType={BTNType}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          submitHandler();\r\n        }}\r\n      >\r\n        {children}\r\n      </Button>\r\n    </FormButtonsContainer>\r\n  );\r\n};\r\n","export const signUpData = {\r\n  name: \"name\",\r\n  lastName: \"lastName\",\r\n  email: \"email\",\r\n  password: \"password\"\r\n};\r\n\r\nexport const signInData = {\r\n  email: \"email\",\r\n  password: \"password\"\r\n};\r\n\r\nexport type SignDataInputMapItem = {\r\n  name: string;\r\n  placeholder: string;\r\n  text: string;\r\n  inputType: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  pattern?: RegExp;\r\n  width?: string;\r\n};\r\n\r\nexport const signValidationPatterns = {\r\n  lastNamePattern: new RegExp(/^[A-Za-z]+$/i),\r\n  zipCodePattern: new RegExp(/^([0-9]{2}-)?[0-9]{3}$/),\r\n  namePattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  cityPattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  streetPattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  homeAdressPattern: new RegExp(/^([0-9])+$/),\r\n  eMailPattern: new RegExp(\r\n    /^(([A-Za-z0-9]+_+)|([A-Za-z0-9]+-+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+-+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,6}$/\r\n  ),\r\n  passwordPattern: new RegExp(\r\n    /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/\r\n  )\r\n};\r\n\r\nexport type SignDataInputMap = {\r\n  [key: string]: SignDataInputMapItem;\r\n};\r\n\r\nexport const signDataInputMap: SignDataInputMap = {\r\n  email: {\r\n    name: signInData.email,\r\n    placeholder: \"E-mail\",\r\n    text: \"E-mail musi być w poprawnym formacie: 'abc@def.com' \",\r\n    minLength: 1,\r\n    pattern: signValidationPatterns.eMailPattern,\r\n    inputType: \"email\",\r\n    width: \"48%\"\r\n  },\r\n  password: {\r\n    name: signInData.password,\r\n    placeholder: \"Hasło\",\r\n    text: \"Hasło musi mieć min 8 znaków, conajmniej jedną dużą, znak specjalny oraz cyfrę\",\r\n    minLength: 8,\r\n    pattern: signValidationPatterns.passwordPattern,\r\n    inputType: \"password\",\r\n    width: \"48%\"\r\n  },\r\n  name: {\r\n    name: signUpData.name,\r\n    placeholder: \"Imię\",\r\n    text: \"Imię musi mieć min 1 literę\",\r\n    minLength: 1,\r\n    pattern: signValidationPatterns.namePattern,\r\n    inputType: \"name\",\r\n    width: \"48%\"\r\n  },\r\n  lastName: {\r\n    name: signUpData.lastName,\r\n    placeholder: \"Nazwisko\",\r\n    text: \"Nazwisko musi mieć min 1 literę\",\r\n    minLength: 1,\r\n    pattern: signValidationPatterns.lastNamePattern,\r\n    inputType: \"surname\",\r\n    width: \"48%\"\r\n  }\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  FormTextInputs\r\n} from \"../../globalStyles/form/form.globalStyles\";\r\nimport { FormButtons } from \"../../globalStyles/form/formButtons/formButtons.component\";\r\nimport { useAppDispatch } from \"../../hooks/hooks\";\r\nimport { signInWithEmailAsync } from \"../../store/userReducer/user.thunk\";\r\nimport { signDataInputMap, signInData } from \"../../utils/loginPage/sign.utils\";\r\nimport { CheckoutFormInput } from \"../checkoutForm/checkoutFormInputs/textInput/checkoutFormInput.component\";\r\n\r\nexport const SignInForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm();\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Form className=\"was-validated\" id=\"signInForm\">\r\n      <FormTextInputs>\r\n        {Object.keys(signInData).map((input: string) => {\r\n          const {\r\n            name,\r\n            text,\r\n            placeholder,\r\n            minLength = 2,\r\n            pattern,\r\n            width = \"5rem\",\r\n            inputType,\r\n            ...restArgs\r\n          } = signDataInputMap[input];\r\n          return (\r\n            <CheckoutFormInput\r\n              id={`${name}`}\r\n              register={register}\r\n              pattern={pattern}\r\n              minLength={minLength}\r\n              placeholder={placeholder}\r\n              errorName={errors[name]}\r\n              width={width}\r\n              key={`${name + \"log\"}`}\r\n              inputType={inputType}\r\n              {...restArgs}\r\n            >\r\n              {text}\r\n            </CheckoutFormInput>\r\n          );\r\n        })}\r\n      </FormTextInputs>\r\n      <FormButtons\r\n        submitHandler={handleSubmit((formData) => {\r\n          dispatch(\r\n            signInWithEmailAsync(formData.email, formData.password)\r\n          )\r\n        })}\r\n        idPlus=\"logButton\"\r\n      >\r\n        Zaloguj się\r\n      </FormButtons>\r\n    </Form>\r\n  );\r\n};\r\n","import { FieldValues, useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  FormTextInputs\r\n} from \"../../globalStyles/form/form.globalStyles\";\r\nimport { FormButtons } from \"../../globalStyles/form/formButtons/formButtons.component\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/hooks\";\r\nimport { setCurrentUserFormData } from \"../../store/userReducer/user.actions\";\r\nimport { selectCurrentUserFormData } from \"../../store/userReducer/user.selector\";\r\n\r\nimport { signUpAsync } from \"../../store/userReducer/user.thunk\";\r\n\r\nimport { signDataInputMap, signUpData } from \"../../utils/loginPage/sign.utils\";\r\nimport { CheckoutFormInput } from \"../checkoutForm/checkoutFormInputs/textInput/checkoutFormInput.component\";\r\n\r\nexport const SignUpForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm();\r\n\r\n  const initProfileData = useAppSelector(selectCurrentUserFormData);\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const signUpHandler = (formData: FieldValues) => {\r\n    const { name, lastName, email, password } = formData;\r\n    const formDataWithDisplayName = {\r\n      ...initProfileData,\r\n      displayName: name + \" \" + lastName,\r\n      name,\r\n      lastName,\r\n      email\r\n    };\r\n    dispatch(setCurrentUserFormData(formDataWithDisplayName));\r\n    dispatch(signUpAsync(email, password));\r\n    navigate(\"/\", { replace: true });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"was-validated\" id=\"signUpForm\">\r\n      <FormTextInputs>\r\n        {Object.keys(signUpData).map((input: string) => {\r\n          const {\r\n            name,\r\n            text,\r\n            placeholder,\r\n            minLength = 2,\r\n            pattern,\r\n            width = \"5rem\",\r\n            inputType,\r\n            ...restArgs\r\n          } = signDataInputMap[input];\r\n          return (\r\n            <CheckoutFormInput\r\n              id={`${name}`}\r\n              register={register}\r\n              pattern={pattern}\r\n              minLength={minLength}\r\n              placeholder={placeholder}\r\n              errorName={errors[name]}\r\n              width={width}\r\n              idPlus={`${name + \"reg\"}`}\r\n              key={`${name + \"reg\"}`}\r\n              inputType={inputType}\r\n              {...restArgs}\r\n            >\r\n              {text}\r\n            </CheckoutFormInput>\r\n          );\r\n        })}\r\n      </FormTextInputs>\r\n      <FormButtons\r\n        submitHandler={handleSubmit((formData) => {\r\n          signUpHandler(formData);\r\n        })}\r\n        idPlus=\"regButton\"\r\n      >\r\n        Zarejestruj się\r\n      </FormButtons>\r\n    </Form>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { StandardFlexContainer, Title } from \"../../global.styles\";\r\n\r\nexport const SignInContainer = styled(StandardFlexContainer)`\r\n  // border: 2px solid red;\r\n  align-items: start;\r\n  flex-direction: column;\r\n  max-width: 28rem;\r\n`;\r\n\r\nexport const SignUpContainer = styled(StandardFlexContainer)`\r\n  // border: 2px solid red;\r\n  align-items: start;\r\n  flex-direction: column;\r\n  margin: 0 0 1rem 0;\r\n  max-width: 28rem;\r\n`;\r\n\r\nexport const SignInTitle = styled(Title)`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const SignUpTitle = styled(Title)`\r\n  margin-bottom: 1rem;\r\n`;\r\n","import Button, {\r\n  BUTTON_TYPE_CLASSES\r\n} from \"../../components/button/button.component\";\r\nimport { SignInForm } from \"../../components/signInForm/signInForm.component\";\r\nimport { SignUpForm } from \"../../components/signUpForm/signUpForm.component\";\r\nimport { signInWithGooglePopUp } from \"../../utils/firebase/firebase.utils\";\r\nimport {\r\n  SignInContainer,\r\n  SignInTitle,\r\n  SignUpContainer,\r\n  SignUpTitle\r\n} from \"./login.styles\";\r\n\r\nconst Login = () => {\r\n  const loginThroughGoogleHandler = () => {\r\n    signInWithGooglePopUp();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SignUpContainer>\r\n        {\" \"}\r\n        <SignUpTitle> Rejestracja</SignUpTitle>\r\n        <SignUpForm />\r\n      </SignUpContainer>\r\n\r\n      <SignInContainer>\r\n        <SignInTitle> Logowanie</SignInTitle>\r\n\r\n        <SignInForm />\r\n\r\n        <Button\r\n          onClick={loginThroughGoogleHandler}\r\n          buttonType={BUTTON_TYPE_CLASSES.google}\r\n        >\r\n          Zaloguj przez konto Google\r\n        </Button>\r\n      </SignInContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from \"styled-components\";\r\nimport { Form } from \"../../globalStyles/form/form.globalStyles\";\r\nimport { motion } from \"framer-motion\";\r\nimport { StandardFlexMixin } from \"../../global.styles\";\r\n\r\nexport const ProfileDetailsContainer = styled(motion.div)`\r\n  ${StandardFlexMixin}\r\n  flex-direction: column;\r\n  justify-content: start;\r\n  padding: 2rem 0rem;\r\n  gap: 2rem;\r\n  flex: 1 1 100%;\r\n`;\r\nexport const ProfileDetailsForm = styled(Form)`\r\n  max-width: 30rem;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.75));\r\n`;\r\n","import { type User } from \"firebase/auth\";\r\nimport { useEffect } from \"react\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport { Title } from \"../../global.styles\";\r\nimport { FormTextInputs } from \"../../globalStyles/form/form.globalStyles\";\r\nimport { FormButtons } from \"../../globalStyles/form/formButtons/formButtons.component\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/hooks\";\r\nimport { toggleProfileEditingMode } from \"../../store/userReducer/user.actions\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectCurrentUserFormData,\r\n  selectIsProfileEditingModeOn\r\n} from \"../../store/userReducer/user.selector\";\r\nimport { getUsersDataAsync } from \"../../store/userReducer/user.thunk\";\r\nimport { type ProfileDetailsType } from \"../../store/userReducer/user.types\";\r\nimport { formDataInputMap } from \"../../utils/checkoutForm/checkoutForm.utils\";\r\nimport { updateProfileInformationInDoc } from \"../../utils/firebase/functions/dbManipulationFunctions.FBFunctions\";\r\nimport { MyAccountVariants } from \"../../utils/framer-motion/variants.utils\";\r\nimport {\r\n  profileDetailsCreator,\r\n  profileDetailsWithNoEmailAndPassword\r\n} from \"../../utils/reusableFunctions/profileDetailsCreator.Functions\";\r\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\r\nimport { CheckoutFormInput } from \"../checkoutForm/checkoutFormInputs/textInput/checkoutFormInput.component\";\r\nimport {\r\n  ProfileDetailsContainer,\r\n  ProfileDetailsForm\r\n} from \"./profileDetails.styles\";\r\n\r\nexport const ProfileDetails = ({ name }: { name: string }) => {\r\n  const isEditingModeOn = useAppSelector(selectIsProfileEditingModeOn);\r\n  const usersProfileDBData = useAppSelector(selectCurrentUserFormData);\r\n  const userFormData = profileDetailsCreator(usersProfileDBData);\r\n  const currentUser = useAppSelector(selectCurrentUser);\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm();\r\n\r\n  const changeProfileDataHandler = (formData: FieldValues) => {\r\n    console.log(\"SIABADYSZ\");\r\n    const formDataWithNoEmailAndPassword = profileDetailsWithNoEmailAndPassword(\r\n      formData as ProfileDetailsType\r\n    );\r\n\r\n    updateProfileInformationInDoc(\r\n      currentUser as User,\r\n      formDataWithNoEmailAndPassword,\r\n      usersProfileDBData\r\n    ).then(() => dispatch(getUsersDataAsync(currentUser)));\r\n\r\n    dispatch(toggleProfileEditingMode());\r\n  };\r\n\r\n  const startProfileEditingHandler = () => {\r\n    dispatch(toggleProfileEditingMode());\r\n  };\r\n\r\n  const resetChangesHandler = () => {\r\n    dispatch(toggleProfileEditingMode());\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset(userFormData);\r\n  }, [userFormData.email]);\r\n\r\n  return (\r\n    <ProfileDetailsContainer\r\n      variants={MyAccountVariants}\r\n      initial=\"enter\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <Title>Szczegóły konta {name}</Title>\r\n\r\n      <ProfileDetailsForm>\r\n        <FormTextInputs>\r\n          {Object.keys(formDataInputMap).map((input) => {\r\n            const {\r\n              minLength = 2,\r\n              pattern,\r\n              text,\r\n              ...restArgs\r\n            } = formDataInputMap[input];\r\n\r\n            return (\r\n              <CheckoutFormInput\r\n                {...restArgs}\r\n                id={input}\r\n                idPlus=\"\"\r\n                register={register}\r\n                pattern={pattern}\r\n                minLength={minLength}\r\n                errorName={errors[input]}\r\n                key={input}\r\n                disabledText={!isEditingModeOn}\r\n              >\r\n                {text}\r\n              </CheckoutFormInput>\r\n            );\r\n          })}\r\n        </FormTextInputs>\r\n        {isEditingModeOn ? (\r\n          <>\r\n            <FormButtons\r\n              submitHandler={handleSubmit((formData) =>\r\n                changeProfileDataHandler(formData)\r\n              )}\r\n            >\r\n              Akceptuj zmiany\r\n            </FormButtons>\r\n\r\n            <Button\r\n              buttonType={BUTTON_TYPE_CLASSES.formButton}\r\n              onClick={() => {\r\n                resetChangesHandler();\r\n              }}\r\n            >\r\n              Cofnij zmiany\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Button\r\n            buttonType={BUTTON_TYPE_CLASSES.formButton}\r\n            onClick={() => {\r\n              startProfileEditingHandler();\r\n            }}\r\n          >\r\n            Edytuj dane\r\n          </Button>\r\n        )}\r\n      </ProfileDetailsForm>\r\n    </ProfileDetailsContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { StandardFlexContainer, Title } from \"../../global.styles\";\r\n\r\nexport const LoginPageContainer = styled(StandardFlexContainer)`\r\n  // border: 2px solid red;\r\n  justify-content: space-around;\r\n  flex-direction: row;\r\n  align-items: start;\r\n  flex-basis: 100%;\r\n  padding: 2rem 0rem;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport Login from \"../../components/login/login.route\";\r\nimport { ProfileDetails } from \"../../components/profileDetails/profileDetails.component\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\nimport { useAppSelector } from \"../../hooks/hooks\";\r\nimport {\r\n  selectCurrentUser,\r\n  selectIsLoadingUser\r\n} from \"../../store/userReducer/user.selector\";\r\n\r\nimport { LoginPageContainer } from \"./myAccountPage.styles\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { MyAccountVariants } from \"../../utils/framer-motion/variants.utils\";\r\n\r\nconst MyAccountPage = () => {\r\n  const currentUser = useAppSelector(selectCurrentUser);\r\n  const isLoading = useAppSelector(selectIsLoadingUser);\r\n\r\n  const [waiting, setWaiting] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    !isLoading &&\r\n      setTimeout(() => {\r\n        setWaiting(false);\r\n      }, 1000);\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <>\r\n      {waiting ? (\r\n        <Spinner />\r\n      ) : currentUser === null ? (\r\n        <motion.div\r\n          variants={MyAccountVariants}\r\n          initial=\"enter\"\r\n          animate=\"visible\"\r\n          exit=\"exit\"\r\n        >\r\n          <LoginPageContainer>\r\n            <Login />\r\n          </LoginPageContainer>\r\n        </motion.div>\r\n      ) : (\r\n        <ProfileDetails\r\n          name={currentUser.displayName ? currentUser.displayName : \"\"}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyAccountPage;\r\n","export const generateId = (length = 7) => {\r\n  let result = \"\";\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  const charactersLength = characters.length;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n\r\n  return result;\r\n};\r\n","import { generateId } from \"../../utils/reusableFunctions/generateId.function\";\r\n\r\nexport const orderId = generateId(8);\r\n\r\nexport const validationPatterns = {\r\n  lastNamePattern: new RegExp(/^[A-Za-z]+$/i),\r\n  zipCodePattern: new RegExp(/^([0-9]{2}-)?[0-9]{3}$/),\r\n  namePattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  cityPattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  streetPattern: new RegExp(/^([ \\u00c0-\\u01ffa-zA-Z'])+$/),\r\n  homeAdressPattern: new RegExp(/^([0-9])+$/),\r\n  eMailPattern: new RegExp(\r\n    /^(([A-Za-z0-9]+_+)|([A-Za-z0-9]+-+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z0-9]+@((\\w+-+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,6}$/\r\n  )\r\n};\r\n\r\nexport type FormData = {\r\n  [key: string]: string;\r\n};\r\n\r\nexport const PLFormData: FormData = {\r\n  name: \"Imię\",\r\n  lastName: \"Nazwisko\",\r\n  email: \"E-mail\",\r\n  deliveryMethod: \"deliveryMethod\",\r\n  city: \"Miasto\",\r\n  homeAdress: \"Adres\",\r\n  street: \"Ulica\",\r\n  zip: \"Zip\",\r\n  payMethod: \"payMethod\",\r\n  terms: \"terms\"\r\n};\r\n\r\nexport const formData: FormData = {\r\n  name: \"name\",\r\n  lastName: \"lastName\",\r\n  email: \"email\",\r\n  deliveryMethod: \"deliveryMethod\",\r\n  city: \"city\",\r\n  homeAdress: \"homeAdress\",\r\n  street: \"street\",\r\n  zip: \"zip\",\r\n  payMethod: \"payMethod\",\r\n  terms: \"terms\"\r\n};\r\n\r\nexport type FormDataInputMapItem = {\r\n  name: string;\r\n  placeholder: string;\r\n  text: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  pattern?: RegExp;\r\n  width?: string;\r\n};\r\n\r\nexport type FormDataInputMap = {\r\n  [key in keyof typeof formData]: FormDataInputMapItem;\r\n};\r\n\r\nexport type DeliveryOptions = {\r\n  [key in keyof typeof formData]: { value: string; icon: string };\r\n};\r\n\r\nexport const formDataInputMap: FormDataInputMap = {\r\n  name: {\r\n    name: formData.name,\r\n    placeholder: \"Imię\",\r\n    text: \"Proszę wpisać imię nie używając znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.namePattern,\r\n    width: \"40%\"\r\n  },\r\n  lastName: {\r\n    name: formData.lastName,\r\n    placeholder: \"Nazwisko\",\r\n    text: \"Wpisz nazwisko nie używając znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.lastNamePattern,\r\n    width: \"56%\"\r\n  },\r\n  email: {\r\n    name: formData.email,\r\n    placeholder: \"E-mail\",\r\n    text: \"Uzupełnij e-mail w formacie 'abcde@acbc.com' nie używając znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.eMailPattern,\r\n    width: \"58%\"\r\n  },\r\n  city: {\r\n    name: formData.city,\r\n    placeholder: \"Miasto\",\r\n    text: \"Wypełnij tę rubrykę nie używając znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.cityPattern,\r\n    width: \"38%\"\r\n  },\r\n  street: {\r\n    name: formData.street,\r\n    placeholder: \"Nazwa ulicy\",\r\n    text: \"To pole jest potrzebne, wpisz poprawną wartość bez używania znaków specjalnych\",\r\n    minLength: 1,\r\n    pattern: validationPatterns.streetPattern,\r\n    width: \"\"\r\n  },\r\n  homeAdress: {\r\n    name: formData.homeAdress,\r\n    placeholder: \"Numer domu\",\r\n    text: \"Wymagane polę, uzupełnij nie używając znaków specjalnych\",\r\n    minLength: 2,\r\n    pattern: validationPatterns.homeAdressPattern,\r\n    width: \"30%\"\r\n  },\r\n  zip: {\r\n    name: formData.zip,\r\n    placeholder: \"Zip\",\r\n    text: \"Kod pocztowy musi być w formacie XX-XXX\",\r\n    minLength: 5,\r\n    pattern: validationPatterns.zipCodePattern,\r\n    width: \"5rem\"\r\n  }\r\n};\r\n\r\nexport const deliveryOptions: DeliveryOptions = {\r\n  poczta: { value: \"Poczta Polska\", icon: \"fluent-emoji:post-office\" },\r\n  dhl: { value: \"Kurier DHL\", icon: \"fa6-brands:dhl\" },\r\n  inpost: { value: \"Kurier Inpost\", icon: \"arcticons:inpost-mobile\" },\r\n  fedex: { value: \"Kurier FedEx\", icon: \"cib:fedex\" }\r\n};\r\n\r\nexport const paymentOptions = {\r\n  blik: { value: \"Blik\", icon: \"akar-icons:mobile-device\" },\r\n  przelew: { value: \"Przelew tradycyjny\", icon: \"icon-park:bank-transfer\" },\r\n  zaPobraniem: { value: \"Za pobraniem\", icon: \"fluent:money-hand-20-regular\" }\r\n};\r\n"],"names":["InputContainer","styled","props","width","InputLabel","Colors","TextInput","CheckoutFormInput","id","placeholder","register","errorName","children","minLength","pattern","inputType","idPlus","disabledText","initValue","restArgs","autoComplete","type","disabled","value","required","htmlFor","PLFormData","Form","FormTextInputs","NonValidFormInput","FormButtonsContainer","StandardFlexContainer","FormButtons","submitHandler","buttonTypeProp","BTNType","BUTTON_TYPE_CLASSES","buttonType","onClick","e","preventDefault","signUpData","name","lastName","email","password","signInData","signValidationPatterns","lastNamePattern","RegExp","zipCodePattern","namePattern","cityPattern","streetPattern","homeAdressPattern","eMailPattern","passwordPattern","signDataInputMap","text","SignInForm","useForm","handleSubmit","errors","formState","dispatch","useAppDispatch","useNavigate","className","Object","keys","map","input","formData","signInWithEmailAsync","SignUpForm","initProfileData","useAppSelector","selectCurrentUserFormData","navigate","formDataWithDisplayName","displayName","setCurrentUserFormData","signUpAsync","replace","signUpHandler","SignInContainer","SignUpContainer","SignInTitle","Title","SignUpTitle","signInWithGooglePopUp","ProfileDetailsContainer","motion","StandardFlexMixin","ProfileDetailsForm","ProfileDetails","isEditingModeOn","selectIsProfileEditingModeOn","usersProfileDBData","userFormData","profileDetailsCreator","currentUser","selectCurrentUser","reset","useEffect","variants","MyAccountVariants","initial","animate","exit","formDataInputMap","key","console","log","formDataWithNoEmailAndPassword","profileDetailsWithNoEmailAndPassword","updateProfileInformationInDoc","then","getUsersDataAsync","toggleProfileEditingMode","changeProfileDataHandler","LoginPageContainer","isLoading","selectIsLoadingUser","useState","waiting","setWaiting","setTimeout","orderId","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","validationPatterns","deliveryMethod","city","homeAdress","street","zip","payMethod","terms","deliveryOptions","poczta","icon","dhl","inpost","fedex","paymentOptions","blik","przelew","zaPobraniem"],"sourceRoot":""}