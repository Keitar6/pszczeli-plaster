{"version":3,"file":"static/js/996.da282140.chunk.js","mappings":"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","sources":["components/shopDirectory/shopDirectory.styles.ts","components/shopDirectory/shopSorting/shopSorting.styles.ts","components/shopDirectory/shopSorting/shopSorting.component.tsx","components/productCard/productCard.styles.ts","components/productCard/productCard.component.tsx","utils/reusableFunctions/basicSorting.function.ts","components/productCards/productCards.styles.ts","components/productCards/productCards.component.tsx","components/shopDirectory/shopDirectory.component.tsx","routes/shopPage/shopPage.route.tsx","store/categories/category.selector.ts"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Colors, StandardFlexContainer } from \"../../global.styles\";\r\nimport Button from \"../button/button.component\";\r\n\r\nexport const ShopDirectoryContainer = styled(StandardFlexContainer)`\r\n  display: flex;\r\n  align-items: start;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin: 0rem 0rem;\r\n  flex-basis: 90%;\r\n`;\r\n\r\nexport const ShopDirectoryContent = styled(StandardFlexContainer)`\r\n  flex-direction: column;\r\n  flex: 1 1 70%;\r\n  gap: 0rem;\r\n  height: 100%;\r\n  flex-wrap: nowrap;\r\n`;\r\n\r\nexport const ShopDirectoryContentHeader = styled.div`\r\n  border-bottom: 1px solid ${Colors.darkRGBA};\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  padding: 0;\r\n  max-height: 3.3rem;\r\n  flex: 1 1 10%;\r\n  H1 {\r\n    width: 100%;\r\n    color: ${Colors.primary};\r\n    text-align: center;\r\n    margin: auto;\r\n\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const ShopMenuContainer = styled.div`\r\n  border-right: 1px solid ${Colors.darkRGBA};\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  justify-content: start;\r\n  align-items: center;\r\n  gap: 5rem;\r\n  padding: 0 0 0.6rem 0rem;\r\n`;\r\n\r\nexport const ShopMenuItems = styled.ul``;\r\n\r\nexport const ShopMenuItem = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  text-decoration: none;\r\n  border: none;\r\n  color: ${Colors.dark};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\nexport const ShopDirectoryButton = styled(Button)`\r\n  flex: 0 0 5%;\r\n  width: 30%;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n","import { StandardFlexContainer, Typhography } from \"../../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ProductsSorting = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  justify-content: end;\r\n  align-items: center;\r\n  padding: 0.5rem 5rem 0.5rem 0;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const ShopAscendingIcon = styled(StandardFlexContainer)`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const SortingTypesList = styled(StandardFlexContainer)`\r\n  flex-direction: row-reverse;\r\n  gap: 0.5rem;\r\n\r\n  font-family: ${Typhography.fontType};\r\n  font-size: ${Typhography.fontSizes.H6};\r\n  font-weight: bold;\r\n  background-color: transparent;\r\n  border-radius: 5rem;\r\n`;\r\n","import { useAppDispatch, useAppSelector } from \"../../../hooks/hooks\";\r\nimport { Icon } from \"@iconify/react\";\r\n\r\nimport { Colors } from \"../../../global.styles\";\r\nimport { selectSort } from \"../../../store/userReducer/user.selector\";\r\nimport {\r\n  ProductsSorting,\r\n  ShopAscendingIcon,\r\n  SortingTypesList\r\n} from \"./shopSorting.styles\";\r\nimport {\r\n  setAlphabeticSorting,\r\n  setPriceSorting,\r\n  toggleSortingAscending\r\n} from \"../../../store/userReducer/user.actions\";\r\nimport Button, {\r\n  BUTTON_TYPE_CLASSES\r\n} from \"../../../components/button/button.component\";\r\nimport { selectIsSortingInView } from \"../../../store/generalPropReducer/generalProp.selector\";\r\nimport { toggleSortingInView } from \"../../../store/generalPropReducer/generalProp.actions\";\r\n\r\nexport const ShopSorting = () => {\r\n  const { ascending } = useAppSelector(selectSort);\r\n  const dispatch = useAppDispatch();\r\n  const sortowanie = useAppSelector(selectIsSortingInView);\r\n  const ascenIconOnClickHandler = () => {\r\n    dispatch(toggleSortingAscending());\r\n  };\r\n\r\n  const sortTypeOnClickHandler = (event: any) => {\r\n    if (event.target.id === \"price\") dispatch(setPriceSorting());\r\n    else if (event.target.id === \"alpha\") dispatch(setAlphabeticSorting());\r\n  };\r\n\r\n  return (\r\n    <ProductsSorting>\r\n      <SortingTypesList id=\"SortingTypes\">\r\n        <Button\r\n          buttonType={BUTTON_TYPE_CLASSES.sorting}\r\n          onClick={() => dispatch(toggleSortingInView())}\r\n        >\r\n          Sortowanie\r\n        </Button>\r\n        {sortowanie ? (\r\n          <>\r\n            <Button\r\n              id=\"alpha\"\r\n              buttonType={BUTTON_TYPE_CLASSES.sorting}\r\n              onClick={sortTypeOnClickHandler}\r\n              data-testid=\"sortTypeOnClickApha\"\r\n            >\r\n              Alphabetyczne\r\n            </Button>\r\n            <Button\r\n              id=\"price\"\r\n              buttonType={BUTTON_TYPE_CLASSES.sorting}\r\n              onClick={sortTypeOnClickHandler}\r\n              data-testid=\"sortTypeOnClickPrice\"\r\n            >\r\n              Według ceny\r\n            </Button>\r\n          </>\r\n        ) : null}\r\n      </SortingTypesList>\r\n      {ascending ? (\r\n        <ShopAscendingIcon\r\n          onClick={() => ascenIconOnClickHandler()}\r\n          data-testid=\"ascenIconOnClick\"\r\n        >\r\n          <Icon icon=\"bi:arrow-up-circle\" width=\"32\" color={Colors.dark} />\r\n        </ShopAscendingIcon>\r\n      ) : (\r\n        <ShopAscendingIcon\r\n          onClick={() => ascenIconOnClickHandler()}\r\n          data-testid=\"ascenIconOnClick\"\r\n        >\r\n          <Icon\r\n            icon=\"bi:arrow-up-circle\"\r\n            width=\"32\"\r\n            rotate={2}\r\n            color={Colors.dark}\r\n          />\r\n        </ShopAscendingIcon>\r\n      )}\r\n    </ProductsSorting>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Colors, StandardFlexContainer } from \"../../global.styles\";\r\n\r\nexport const ProductCardComponent = styled(StandardFlexContainer)`\r\n  border: 0.2rem solid ${Colors.primary};\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  flex-wrap: nowrap;\r\n  max-height: 15rem;\r\n`;\r\n\r\nexport const ProductCardImageContainer = styled(StandardFlexContainer)`\r\n  position: relative;\r\n  flex: 1 1 70%;\r\n\r\n  img {\r\n    height: 12rem;\r\n    width: 12rem;\r\n    object-fit: cover;\r\n    // border: 0.2rem solid red;\r\n  }\r\n\r\n  button {\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n\r\n  &:hover {\r\n    img {\r\n      opacity: 0.7;\r\n    }\r\n\r\n    button {\r\n      display: flex;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductCardDescription = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex: 1 1 auto;\r\n  gap: 1rem;\r\n  border-top: 0.2rem solid ${Colors.primary};\r\n  width: 100%;\r\n  padding: 0.5rem 0.5rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ProductCardName = styled(StandardFlexContainer)`\r\n  position: relative;\r\n\r\n  background-image: linear-gradient(\r\n    to right,\r\n    ${Colors.primary},\r\n    ${Colors.dark} 50%,\r\n    #000 50%\r\n  );\r\n  background-size: 200% 100%;\r\n  background-position: -100%;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    background: linear-gradient(to left, ${Colors.primary}, ${Colors.dark});\r\n    display: block;\r\n    position: absolute;\r\n    bottom: -3px;\r\n    left: 0;\r\n    width: 0;\r\n    height: 3px;\r\n  }\r\n\r\n  &:hover {\r\n    background-position: 0;\r\n  }\r\n\r\n  &:hover::before {\r\n    transition: all 0.3s ease-in-out;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ProductCardPrice = styled(StandardFlexContainer)``;\r\n","import React, { FC, PropsWithChildren } from \"react\";\r\nimport { addItemToCart } from \"../../store/cartReducer/cart.actions\";\r\nimport { selectCartItems } from \"../../store/cartReducer/cart.selector\";\r\nimport { CategoryItem } from \"../../store/categories/category.types\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/hooks\";\r\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\r\nimport {\r\n  ProductCardPrice,\r\n  ProductCardComponent,\r\n  ProductCardDescription,\r\n  ProductCardName,\r\n  ProductCardImageContainer\r\n} from \"./productCard.styles\";\r\nimport { showProductCardDetails } from \"../../store/generalPropReducer/generalProp.actions\";\r\nimport { selectAllItemsMap } from \"../../store/categories/category.selector\";\r\n\r\ntype ProductCardProps = CategoryItem;\r\nexport const ProductCard: FC<PropsWithChildren<ProductCardProps>> = (\r\n  category\r\n) => {\r\n  const { id, name, dodatki, image, price } = category;\r\n\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const allItemsMap = useAppSelector(selectAllItemsMap);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const addProductHandler = () => {\r\n    const productToAdd = dodatki\r\n      ? { id, dodatki, image, name, price }\r\n      : { id, image, name, price };\r\n    dispatch(addItemToCart(cartItems, productToAdd));\r\n  };\r\n\r\n  const productDetailsHandler = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n\r\n    dispatch(\r\n      showProductCardDetails(\r\n        allItemsMap,\r\n        (\r\n          event as React.MouseEvent<HTMLDivElement, MouseEvent> & {\r\n            target: { innerText: string };\r\n          }\r\n        ).target.innerText\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ProductCardComponent>\r\n      <ProductCardImageContainer>\r\n        <img src={`/dataBaseImages/${image}`} alt={`Obraz: ${name}`} />\r\n        <Button\r\n          buttonType={BUTTON_TYPE_CLASSES.productCard}\r\n          onClick={() => addProductHandler()}\r\n        >\r\n          Dodaj do koszyka\r\n        </Button>\r\n      </ProductCardImageContainer>\r\n\r\n      <ProductCardDescription>\r\n        <ProductCardName\r\n          onClick={(event) => productDetailsHandler(event)}\r\n        >{`${name}`}</ProductCardName>\r\n        <ProductCardPrice>{`${price}zł`}</ProductCardPrice>\r\n      </ProductCardDescription>\r\n    </ProductCardComponent>\r\n  );\r\n};\r\n","import { CategoryItem } from \"../../store/categories/category.types\";\r\nimport { SortType, SORTING_TYPES } from \"../../store/userReducer/user.reducer\";\r\n\r\nexport const comparingUP = (\r\n  a: CategoryItem,\r\n  b: CategoryItem,\r\n  sortType: string\r\n) => {\r\n  let firstItem: string | number = \"\";\r\n  let secondItem: string | number = \"\";\r\n\r\n  if (sortType === SORTING_TYPES.ALPHABETIC) {\r\n    firstItem = a.name.toUpperCase();\r\n    secondItem = b.name.toUpperCase();\r\n  } else if (sortType === SORTING_TYPES.PRICE) {\r\n    firstItem = a.price;\r\n    secondItem = b.price;\r\n  }\r\n\r\n  if (firstItem < secondItem) {\r\n    return -1;\r\n  }\r\n  if (firstItem > secondItem) {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nexport const comparingDOWN = (\r\n  a: CategoryItem,\r\n  b: CategoryItem,\r\n  sortType: string\r\n) => {\r\n  let firstItem: string | number = \"\";\r\n  let secondItem: string | number = \"\";\r\n\r\n  if (sortType === SORTING_TYPES.ALPHABETIC) {\r\n    firstItem = a.name.toUpperCase();\r\n    secondItem = b.name.toUpperCase();\r\n  } else if (sortType === SORTING_TYPES.PRICE) {\r\n    firstItem = a.price;\r\n    secondItem = b.price;\r\n  }\r\n\r\n  if (firstItem > secondItem) {\r\n    return -1;\r\n  }\r\n  if (firstItem < secondItem) {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nexport const Sorting = (\r\n  items: CategoryItem[],\r\n  sortType: SortType,\r\n  ifInputSort = false\r\n) => {\r\n  const { ascending, sorType } = sortType;\r\n  let sortedArray = items;\r\n\r\n  sortedArray.sort((a, b) => {\r\n    if (ascending) return comparingUP(a, b, sorType as string);\r\n    else return comparingDOWN(a, b, sorType as string);\r\n  });\r\n\r\n  if (ifInputSort && sortType.inputSort !== \"\")\r\n    sortedArray = sortedArray.filter((a) => {\r\n      return a.name.includes(sortType.inputSort) ? 1 : 0;\r\n    });\r\n\r\n  return sortedArray;\r\n};\r\n","import { StandardFlexContainer } from \"../../global.styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ProductCards = styled(StandardFlexContainer)`\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nexport const ProductCardsContent = styled(StandardFlexContainer)`\r\n  width: 100%;\r\n  justify-content: start;\r\n  align-items: start;\r\n  gap: 0.5rem;\r\n  // border: 1px solid blue;\r\n  flex: 1 1 60%;\r\n`;\r\n","import { ProductCard } from \"../../components/productCard/productCard.component\";\r\nimport { CategoryItem } from \"../../store/categories/category.types\";\r\nimport { Sorting } from \"../../utils/reusableFunctions/basicSorting.function\";\r\nimport { useAppSelector } from \"../../hooks/hooks\";\r\nimport { selectSort } from \"../../store/userReducer/user.selector\";\r\nimport {\r\n  selectAllItemsMap,\r\n  selectCategories\r\n} from \"../../store/categories/category.selector\";\r\nimport {\r\n  selectPath,\r\n  selectViewLimiter\r\n} from \"../../store/generalPropReducer/generalProp.selector\";\r\nimport { ProductCards, ProductCardsContent } from \"./productCards.styles\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { ShopMenuProductCardVariants } from \"../../utils/framer-motion/variants.utils\";\r\nimport { viewLimiterInit } from \"../../store/generalPropReducer/generalProp.reducer\";\r\n\r\nexport const ProductCardsContainer = () => {\r\n  const categories = useAppSelector(selectCategories);\r\n  const sort = useAppSelector(selectSort);\r\n  const allItemsMap = useAppSelector(selectAllItemsMap);\r\n  const viewLimiter = useAppSelector(selectViewLimiter);\r\n  const path = useAppSelector(selectPath);\r\n\r\n  const shopHPSorting = () => {\r\n    const tempItemsMapp = Sorting([...allItemsMap], sort, true);\r\n\r\n    return tempItemsMapp.splice(0, viewLimiter);\r\n  };\r\n\r\n  const categoriesSorting = (items: CategoryItem[]) => {\r\n    const tempItemsMapp = Sorting([...items], sort, true);\r\n    return tempItemsMapp.splice(0, viewLimiter);\r\n  };\r\n\r\n  return (\r\n    <ProductCardsContent>\r\n      <ProductCards>\r\n        {path !== \"sklep\"\r\n          ? categories.map((category) => {\r\n              if (category.title === path) {\r\n                return categoriesSorting(category.items).map(\r\n                  ({ id, name, image, price }, index: number) => (\r\n                    <AnimatePresence key={id}>\r\n                      <motion.div\r\n                        variants={ShopMenuProductCardVariants}\r\n                        custom={{ viewLimiterInit, viewLimiter, index }}\r\n                        initial=\"enter\"\r\n                        animate=\"visible\"\r\n                        exit=\"exit\"\r\n                      >\r\n                        <ProductCard\r\n                          id={id}\r\n                          name={name}\r\n                          image={image}\r\n                          price={price}\r\n                        />\r\n                      </motion.div>\r\n                    </AnimatePresence>\r\n                  )\r\n                );\r\n              }\r\n            })\r\n          : shopHPSorting().map(({ id, name, image, price }, index: number) => {\r\n              return (\r\n                <AnimatePresence key={id}>\r\n                  <motion.div\r\n                    variants={ShopMenuProductCardVariants}\r\n                    custom={{ viewLimiterInit, viewLimiter, index }}\r\n                    initial=\"enter\"\r\n                    animate=\"visible\"\r\n                    exit=\"exit\"\r\n                  >\r\n                    <ProductCard\r\n                      id={id}\r\n                      name={name}\r\n                      image={image}\r\n                      price={price}\r\n                    />\r\n                  </motion.div>\r\n                </AnimatePresence>\r\n              );\r\n            })}\r\n      </ProductCards>\r\n    </ProductCardsContent>\r\n  );\r\n};\r\n","import { H1 } from \"../../global.styles\";\r\nimport { FC, useEffect } from \"react\";\r\nimport { refresh } from \"../../utils/reusableFunctions/refresh.function\";\r\n\r\nimport {\r\n  selectPath,\r\n  selectViewLimiter\r\n} from \"../../store/generalPropReducer/generalProp.selector\";\r\nimport {\r\n  selectAllItemsMap,\r\n  selectCategories,\r\n  selectCategoriesMap\r\n} from \"../../store/categories/category.selector\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/hooks\";\r\nimport {\r\n  ShopMenuContainer,\r\n  ShopDirectoryContainer,\r\n  ShopDirectoryContent,\r\n  ShopDirectoryContentHeader,\r\n  ShopMenuItem,\r\n  ShopMenuItems,\r\n  ShopDirectoryButton\r\n} from \"./shopDirectory.styles\";\r\n\r\nimport { ShopSorting } from \"./shopSorting/shopSorting.component\";\r\n\r\nimport {\r\n  incrementViewLimiter,\r\n  resetViewLimiter\r\n} from \"../../store/generalPropReducer/generalProp.actions\";\r\nimport { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\r\nimport { ProductCardsContainer } from \"../productCards/productCards.component\";\r\nimport { setInputSorting } from \"../../store/userReducer/user.actions\";\r\n\r\nconst ShopDirectory: FC = () => {\r\n  const categories = useAppSelector(selectCategories);\r\n  const categoriesMap = useAppSelector(selectCategoriesMap);\r\n  const path = useAppSelector(selectPath);\r\n  const allItemsMap = useAppSelector(selectAllItemsMap);\r\n  const viewLimiter = useAppSelector(selectViewLimiter);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetViewLimiter());\r\n      dispatch(setInputSorting(\"\"));\r\n    };\r\n  }, [path]);\r\n\r\n  const moreProductsHandler = () => {\r\n    dispatch(incrementViewLimiter(viewLimiter, 1));\r\n  };\r\n\r\n  const ItemOnClickHandler = (categoryPath: string) => {\r\n    refresh(categoryPath);\r\n  };\r\n\r\n  return (\r\n    <ShopDirectoryContainer>\r\n      <ShopMenuContainer>\r\n        <H1>\r\n          <span>Menu</span>\r\n        </H1>\r\n\r\n        <ShopMenuItems>\r\n          {categories.map((category) => {\r\n            const { title } = category;\r\n            return (\r\n              <li key={title}>\r\n                <ShopMenuItem\r\n                  to={`/sklep/${title}`}\r\n                  onClick={() => ItemOnClickHandler(`sklep/${title}`)}\r\n                >\r\n                  {title}\r\n                </ShopMenuItem>\r\n              </li>\r\n            );\r\n          }, {})}\r\n        </ShopMenuItems>\r\n      </ShopMenuContainer>\r\n      <ShopDirectoryContent>\r\n        <ShopDirectoryContentHeader>\r\n          <H1>{path}</H1>\r\n          <ShopSorting />\r\n        </ShopDirectoryContentHeader>\r\n        <ProductCardsContainer />\r\n\r\n        {path === \"sklep\"\r\n          ? allItemsMap.length > viewLimiter && (\r\n              <ShopDirectoryButton\r\n                onClick={moreProductsHandler}\r\n                buttonType={BUTTON_TYPE_CLASSES.base}\r\n              >\r\n                Więcej produktów\r\n              </ShopDirectoryButton>\r\n            )\r\n          : categoriesMap[path.toLowerCase()].length > viewLimiter && (\r\n              <ShopDirectoryButton\r\n                onClick={moreProductsHandler}\r\n                buttonType={BUTTON_TYPE_CLASSES.base}\r\n              >\r\n                Więcej produktów\r\n              </ShopDirectoryButton>\r\n            )}\r\n      </ShopDirectoryContent>\r\n    </ShopDirectoryContainer>\r\n  );\r\n};\r\n\r\nexport default ShopDirectory;\r\n","import { Outlet } from \"react-router-dom\";\r\nimport ShopDirectory from \"../../components/shopDirectory/shopDirectory.component\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport { ShoppingPageVariants } from \"../../utils/framer-motion/variants.utils\";\r\n\r\nconst ShopPage = () => {\r\n  return (\r\n    <>\r\n      <Outlet />\r\n      <motion.div\r\n        variants={ShoppingPageVariants}\r\n        initial=\"enter\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n      >\r\n        <ShopDirectory />\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopPage;\r\n","import { createSelector } from \"reselect\";\r\nimport { ReduxState } from \"../rootReducer.redux\";\r\nimport { CategoriesState } from \"./category.reducer\";\r\nimport { CategoryItem, CategoryMap } from \"./category.types\";\r\n\r\nexport const selectCategoryReducer = (state: ReduxState): CategoriesState =>\r\n  state.categoriesReducer;\r\n\r\nexport const selectCategories = createSelector(\r\n  [selectCategoryReducer],\r\n  (categoriesSlice) => categoriesSlice.categories\r\n);\r\n\r\nexport const selectCategoryIfLoading = createSelector(\r\n  [selectCategoryReducer],\r\n  (categoriesSlice) => categoriesSlice.isLoading\r\n);\r\n\r\nexport const selectCategoriesMap = createSelector(\r\n  [selectCategories],\r\n  (categories): CategoryMap => {\r\n    return categories.reduce((acc, category) => {\r\n      const { title, items } = category;\r\n      acc[title.toLowerCase()] = items;\r\n      return acc;\r\n    }, {} as CategoryMap);\r\n  }\r\n);\r\n\r\nexport const selectAllItemsMap = createSelector(\r\n  [selectCategoriesMap],\r\n  (categoriesMap): CategoryItem[] => {\r\n    const tempAllItems: CategoryItem[] = [];\r\n    Object.values(categoriesMap).map((value) => {\r\n      tempAllItems.push(...value);\r\n    }, [] as CategoryItem[]);\r\n\r\n    return tempAllItems;\r\n  }\r\n);\r\n"],"names":["ShopDirectoryContainer","styled","StandardFlexContainer","ShopDirectoryContent","ShopDirectoryContentHeader","Colors","ShopMenuContainer","ShopMenuItems","ShopMenuItem","Link","ShopDirectoryButton","Button","ProductsSorting","ShopAscendingIcon","SortingTypesList","Typhography","ShopSorting","ascending","useAppSelector","selectSort","dispatch","useAppDispatch","sortowanie","selectIsSortingInView","ascenIconOnClickHandler","toggleSortingAscending","sortTypeOnClickHandler","event","target","id","setPriceSorting","setAlphabeticSorting","buttonType","BUTTON_TYPE_CLASSES","onClick","toggleSortingInView","icon","width","color","rotate","ProductCardComponent","ProductCardImageContainer","ProductCardDescription","ProductCardName","ProductCardPrice","ProductCard","category","name","dodatki","image","price","cartItems","selectCartItems","allItemsMap","selectAllItemsMap","src","alt","productToAdd","addItemToCart","addProductHandler","showProductCardDetails","innerText","productDetailsHandler","comparingUP","a","b","sortType","firstItem","secondItem","SORTING_TYPES","toUpperCase","comparingDOWN","Sorting","items","ifInputSort","sorType","sortedArray","sort","inputSort","filter","includes","ProductCards","ProductCardsContent","ProductCardsContainer","categories","selectCategories","viewLimiter","selectViewLimiter","path","selectPath","map","title","splice","index","AnimatePresence","motion","variants","ShopMenuProductCardVariants","custom","viewLimiterInit","initial","animate","exit","categoriesMap","selectCategoriesMap","useEffect","resetViewLimiter","setInputSorting","moreProductsHandler","incrementViewLimiter","H1","to","categoryPath","refresh","length","toLowerCase","ShoppingPageVariants","selectCategoryReducer","state","categoriesReducer","createSelector","categoriesSlice","isLoading","reduce","acc","tempAllItems","Object","values","value","push"],"sourceRoot":""}